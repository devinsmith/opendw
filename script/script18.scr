Disassembling res18.bin (1375 bytes)
0x0000: word_3AE4 = gamestate[0x5A]
0x0002: push_byte(word_3AE4 & 0xFF)
0x0003: .word
0x0004: set loop = 0x04
0x0006: gamestate[0x58] = 0
        gamestate[0x59] = 0
0x0008: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x000A: gamestate[0x58] = word_3AE2
0x000C: word_3AE4 = gamestate[0x5C]
0x000E: shl byte [word_3AE4], 1
0x000F: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x0011: data_res = resource_get(pop_byte())
0x0012: extract_string # "You have just attracted some unwanted..."
0x0013: set_msg $("\r\r")
0x0016: push_byte(running_script_idx)
0x0017: data_res = resource_get(pop_byte())
0x0018: .byte
0x0019: retf
0x001A: gamestate[0x47] = 0xFF
0x001C: word_3AE4 = gamestate[0x1F]
0x001E: cmp word_3AE4, 0x02
0x0020: jnc 0x0050
0x0023: dec [mem]

# Set currently selected player
0x0024: gamestate[0x06] = word_3AE4
0x0026: word_3AE2 = get_char_data 0x4c (Status)
0x0028: word_3AE2 &= 0x81
0x002A: test word_3AE2
0x002B: jnz 0x0045
0x002E: gamestate[0x41] = word_3AE4
0x0030: word_3AE4--
0x0031: gamestate[0x06] = word_3AE4
0x0033: gamestate[0x43] = word_3AE4
0x0035: word_3AE2 = get_char_data 0x4c
0x0037: word_3AE2 &= 0x81
0x0039: test word_3AE2
0x003A: jz 0x0043
0x003D: load_resource res: 0x12, offset: 0x0051
0x0041: gamestate[0x47] = 0
0x0043: word_3AE4 = gamestate[0x41]
0x0045: word_3AE4--
0x0046: cmp word_3AE4, 0x00
0x0048: jnz 0x0024
0x004B: test game_state[0x47]
0x004D: jz 0x001a
0x0050: retf
0x0051: word_3AE4 = gamestate[0x41]
0x0053: word_3AE2 = 0x00
0x0055: gamestate[word_3AE4 + 0x18] = word_3AE2
0x0057: word_3AE2 = gamestate[word_3AE4 + 0x0A]
0x0059: push (word|byte)
0x005A: word_3AE4 = gamestate[0x43]
0x005C: word_3AE2 = 0x00
0x005E: gamestate[word_3AE4 + 0x18] = word_3AE2
0x0060: word_3AE2 = gamestate[word_3AE4 + 0x0A]
0x0062: word_3AE4 = gamestate[0x41]
0x0064: gamestate[word_3AE4 + 0x0A] = word_3AE2
0x0066: word_3AE4 = gamestate[0x43]
0x0068: peek_and_pop
0x0069: gamestate[word_3AE4 + 0x0A] = word_3AE2
0x006B: set loop = 0x09
0x006D: dec [mem]
0x006E: .word
0x006F: op_0D 0x008d
0x0072: gamestate[0x51] = word_3AE2
0x0074: push_byte(word_3AE4 & 0xFF)
0x0075: .byte
0x0076: word_3AE4 = gamestate[0x41]
0x0078: var offset = gamestate[0x51]
        offset += gamestate[0x52] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x53])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x53])->bytes[offset + 1] << 8
0x007A: push (word|byte)
0x007B: word_3AE4 = gamestate[0x43]
0x007D: var offset = gamestate[0x51]
        offset += gamestate[0x52] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x53])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x53])->bytes[offset + 1] << 8
0x007F: word_3AE4 = gamestate[0x41]
0x0081: store_data_resource 0x51
0x0083: peek_and_pop
0x0084: word_3AE4 = gamestate[0x43]
0x0086: store_data_resource 0x51
0x0088: pop byte
0x0089: loop 0x006d
0x008C: retf

0x0097: set_msg $("Will the party:\rFight\rQuickly fight")
0x00B2: word_3AE2 = 0x80
0x00B4: test game_state[0xDB]
0x00B6: jnz 0x00c0
0x00B9: set_msg $("\rRun")
0x00BE: word_3AE2 = 0xd2
0x00C0: word_3ADF[0x0101] = word_3AE2
0x00C3: word_3AE2 = 0x80
0x00C5: test game_state[0x8B]
0x00C7: js 0x00f5
0x00CA: op_19 0x53, 0x43
0x00CD: set loop = 0x03
0x00CF: word_3AE2 = word_3AE4
0x00D0: load_resource res: 0x03, offset: 0x06b1
0x00D4: jz 0x00e4
0x00D7: push_byte(word_3AE4 & 0xFF)
0x00D8: set loop = 0x09
0x00DA: var offset = gamestate[0x41]
        offset += gamestate[0x42] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x43])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x43])->bytes[offset + 1] << 8
0x00DC: pop byte
0x00DD: cmp word_3EA2, 0x02
0x00DF: word_3AE2 = 0x80
0x00E1: jnc 0x00f5
0x00E4: loop 0x00cf
0x00E7: set_msg $("\rAdvance ahead")
0x00F3: word_3AE2 = 0xc1
0x00F5: word_3ADF[0x0104] = word_3AE2
0x00F8: wait_event 0x0000, 'F', 0x0108, 'Q', 0x0108, 'R', 0x02cf, 'A', 0x02ee, 0xff
0x0108: gamestate[0x65] = word_3AE2
0x010A: gamestate[0x67] = 0
0x010C: draw_rectangle 0x16, 0x00, 0x28, 0x98
0x0111: word_3AE4 = gamestate[0x67]
0x0113: gamestate[0x06] = word_3AE4
0x0115: word_3AE2 = 0x0b
0x0117: call 0x053b
0x011A: word_3AE2 = get_char_data 0x4c
0x011C: word_3AE2 &= 0x81
0x011E: test word_3AE2
0x011F: jnz 0x023e
0x0122: word_3AE2 = 0x80
0x0124: word_3ADF[0x01ed] = word_3AE2
0x0127: word_3ADF[0x01f3] = word_3AE2
0x012A: word_3ADF[0x0205] = word_3AE2
0x012D: word_3ADF[0x01fc] = word_3AE2
0x0130: word_3ADF[0x01f6] = word_3AE2
0x0133: draw_pattern
0x0134: write_character_name
0x0135: set_msg $(", choose:\r\r")
0x013F: word_3AE4 = gamestate[0x06]
0x0141: cmp word_3AE4, 0x04
0x0143: jnc 0x015a
0x0146: op_63 0x04c3
0x0149: jnc 0x0165
0x014C: op_68 0x05
0x014E: word_3AE2 &= 0x1f
0x0150: cmp word_3EA2, 0x08
0x0152: jnc 0x0165
0x0155: cmp word_3EA2, 0x0b
0x0157: jc 0x0165
0x015A: set_msg $("Attack\r")
0x0161: word_3ADF[0x01ed] = 0xc1
0x0165: set_msg $("Dodge enemies\r")
0x0171: word_3AE4 = gamestate[0x65]
0x0173: cmp word_3AE4, 0xd1
0x0175: jz 0x0187
0x0178: set_msg $("Block attack\r")
0x0183: word_3ADF[0x01fc] = 0xc2
0x0187: .word
0x0188: word_3AE2 = get_char_data 0x1c
0x018A: test word_3AE2
0x018B: .byte
0x018C: jz 0x019d
0x018F: set_msg $("Cast spell\r")
0x0199: word_3ADF[0x01f3] = 0xc3
0x019D: set_msg $("Use item\rNew weapon\rLoad weapon\r")
0x01B5: test game_state[0xDB]
0x01B7: jnz 0x01c3
0x01BA: set_msg $("Run\r")
0x01BF: word_3ADF[0x01f6] = 0xd2
0x01C3: word_3AE4 = gamestate[0x65]
0x01C5: cmp word_3AE4, 0xd1
0x01C7: jz 0x01db
0x01CA: word_3AE4 = gamestate[0x1F]
0x01CC: cmp word_3AE4, 0x01
0x01CE: jz 0x01db
0x01D1: set_msg $("Move\r")
0x01D7: word_3ADF[0x0205] = 0xcd
0x01DB: word_3AE2 = 0x3f
0x01DD: write_number
0x01DE: set_msg $(" View the party")
0x01EA: wait_event 0xC300, 'A', 0x03bc, 'D', 0x02c5, 'C', 0x0517, 'R', 0x02ca, 'U', 0x04f6, 'B', 0x02c0, 'N', 0x02f3, 'L', 0x0354, 'M', 0x0267, '?', 0x020f, "ESC", 0x0224, 0xff
0x020F: draw_ui_full
0x0210: draw_and_set $("Viewing current party.")
0x0220: wait_escape
0x0221: jmp 0x010c
0x0224: dec game_state[0x67]
0x0226: test game_state[0x67]
0x0228: js 0x0263
0x022B: op_19 0x67, 0x06
0x022E: word_3AE2 = get_char_data 0x4c
0x0230: word_3AE2 &= 0x81
0x0232: test word_3AE2
0x0233: jz 0x0111
0x0236: jmp 0x0224
0x0239: word_3AE4 = gamestate[0x67]
0x023B: call 0x053b
0x023E: inc game_state[0x67]
0x0240: word_3AE4 = gamestate[0x67]
0x0242: check_gamestate 0x1f
0x0244: jnc 0x0111

0x0247: draw_and_set $("Use these commands?\r\r")
0x0258: prompt 'Y', 'N'
0x0259: jz 0x0265
0x025C: word_3AE4 = gamestate[0x67]
0x025E: cmp word_3AE4, 0x01
0x0260: jnz 0x0224
0x0263: stc # No, don't use these commands
0x0264: retf

0x0265: clc # Yes, use the commands
0x0266: retf

0x0267: draw_pattern
0x0268: write_character_name
0x0269: set_msg $(" moves...\r\r")
0x0272: word_3AE4 = gamestate[0x67]
0x0274: cmp word_3AE4, 0x00
0x0276: word_3AE2 = 0x80
0x0278: jz 0x0284
0x027B: set_msg $("Ahead\r")
0x0282: word_3AE2 = 0xc1
0x0284: word_3ADF[0x029e] = word_3AE2
0x0287: inc byte [word_3AE4]
0x0288: check_gamestate 0x1f
0x028A: word_3AE2 = 0x80
0x028C: jc 0x0298
0x028F: set_msg $("Behind")
0x0296: word_3AE2 = 0xc2
0x0298: word_3ADF[0x02a1] = word_3AE2
0x029B: wait_event 0x8000, 'A', 0x02a8, 'B', 0x02b4, "ESC", 0x0111, 0xff
0x02A8: word_3AE4 = gamestate[0x67]
0x02AA: word_3AE2 = word_3AE4
0x02AB: dec word_3AE2
0x02AC: call 0x0544
0x02AF: word_3AE2 = 0x08
0x02B1: jmp 0x0239
0x02B4: word_3AE4 = gamestate[0x67]
0x02B6: word_3AE2 = word_3AE4
0x02B7: inc word_3AE2
0x02B8: call 0x0544
0x02BB: word_3AE2 = 0x09
0x02BD: jmp 0x0239
0x02C0: word_3AE2 = 0x05
0x02C2: jmp 0x0239
0x02C5: word_3AE2 = 0x06
0x02C7: jmp 0x0239
0x02CA: word_3AE2 = 0x0a
0x02CC: jmp 0x0239

# Run
0x02CF: word_3AE2 = 0x0a
0x02D1: gamestate[0x41] = word_3AE2
0x02D3: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x02DC
        }
        game_state[6] = al
0x02D6: gamestate[0x67] = 0x01
0x02D9: jmp 0x0247

0x02DC: word_3AE4 = gamestate[0x06]
0x02DE: word_3AE2 = get_char_data 0x4c (Status)
0x02E0: word_3AE2 &= 0x81
0x02E2: test word_3AE2
0x02E3: word_3AE2 = 0x0b
0x02E5: jnz 0x02ea

0x02E8: word_3AE2 = gamestate[0x41]
0x02EA: call 0x053B
0x02ED: ret

0x02EE: word_3AE2 = 0x0d
0x02F0: jmp 0x02d1
0x02F3: load_resource res: 0x0c, offset: 0x0005
0x02F7: jc 0x0111
0x02FA: op_68 0x05
0x02FC: word_3AE2 &= 0x1f
0x02FE: cmp word_3EA2, 0x03
0x0300: jnc 0x033d
0x0303: cmp word_3EA2, 0x0c
0x0305: jc 0x033d
0x0308: op_68 0x00
0x030A: test word_3AE2
0x030B: word_3AE2 = gamestate[0x07]
0x030D: jns 0x0333
0x0310: draw_and_set $("Do you wish to deequip your ")
0x0325: op_7E 0x78
0x0327: nop
0x0328: memcpy 0x700
0x0329: op_E8
0x032A: .word
0x032B: prompt 'Y', 'N'
0x032C: jnz 0x0111
0x032F: word_3AE2 = gamestate[0x07]
0x0331: op_3A 0x80
0x0333: word_3AE4 = gamestate[0x67]
0x0335: call 0x0544
0x0338: word_3AE2 = 0x5204
0x033B: op_39 0x02
0x033D: draw_and_set $("The ")
0x0342: op_7E 0x78
0x0344: word_3AE2 = gamestate[0xA4]
0x0346: store_data_resource 0x3e
0x0348: test_player_property 0x10
0x034A: op_6C
0x034B: test_player_property 0x41


# Function 53B
# Writes word_3AE2 to resource in gamestate[0x53] at offset 0x4CE
0x053B: .word
0x053C: gamestate[0x51] = 0xce
        gamestate[0x52] = 0x04
0x0540: .byte
0x0541: store_data_resource 0x51
0x0543: ret

0x0544: .word
0x0545: gamestate[0x51] = 0xd5
        gamestate[0x52] = 0x04
0x0549: .byte
0x054A: store_data_resource 0x51
0x054C: ret
0x054D: .word
0x054E: gamestate[0x51] = 0xdc
        gamestate[0x52] = 0x04
0x0552: .byte
0x0553: store_data_resource 0x51
0x0555: ret
0x0556: .word
0x0557: gamestate[0x51] = 0xe3
        gamestate[0x52] = 0x04
0x055B: .byte
0x055C: store_data_resource 0x51
0x055E: ret

