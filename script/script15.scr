Disassembling script15.bin (944 bytes)
0x0000: set loop = 0x09
0x0002: gamestate[0x41] = word_3AE2
0x0004: op_0D 0x0018
0x0007: cmp word_3AE2, gamestate[0x41]
0x0009: jz 0x0010
0x000C: loop 0x0004
0x000F: retf
0x0010: shl byte [word_3AE4], 1
0x0011: .word
0x0012: op_0D 0x0022
0x0015: push (word|byte)
0x0016: .byte
0x0017: ret

0x0018: 0x9B = "ESC"
0x0019: 0xD1 = "Q"
0x001A: 0xD3 = "S"
0x001B: 0xC3 = "C"
0x001C: 0xD5 = "U"
0x001D: 0xC4 = "D"
0x001E: 0xD8 = "X"
0x001F: 0xCF = "O"
0x0020: 0x01 = #[1-7]
0x0021: 0xD0 = "P"

# ESC - Escape jump point
0x0022: jmp 0x0105

# Q - Quit jump point
0x0024: jmp 0x0036

# S - Save game
0x0026: jmp 0x0059

# C - ?
0x0028: jmp 0x0149

# U - ?
0x002A: jmp 0x0191

# D - ?
0x002C: jmp 0x01FA

# X - ?
0x002E: jmp 0x02C8

# O - ?
0x0030: jmp 0x02D5

# [1-7] - Manage character data
0x0032: jmp 0x035D

# P - Combat pictures (enable/disable)
0x0034: jmp 0x011E

# Quit the game
0x0036: draw_rectangle 0x0c, 0x40, 0x1d, 0x78
0x003B: set_msg $("Do you wish to quit the game?\r\r")
0x0053: prompt 'Y', 'N'
0x0054: jnz 0x00ff
0x0057: draw_ui_full
0x0058: ret

# Save game
0x0059: draw_rectangle 0x0c, 0x40, 0x1d, 0x78
0x005E: set_msg $("Do you wish to save your game?\r\r")
0x0075: prompt 'Y', 'N'
0x0076: jnz 0x00ff
0x0079: draw_and_set $("Saving game...\r")
0x0085: word_3AE2 = gamestate[0xDF]
0x0087: push (word|byte)
0x0088: word_3AE2 = 0x07
0x008A: word_3AE2 = load_resource(word_3AE2)
0x008B: gamestate[0x98] = word_3AE2
0x008D: gamestate[0x43] = 0x01
0x0090: .word
0x0091: gamestate[0x96] = 0
        gamestate[0x97] = 0
0x0093: gamestate[0x41] = 0
        gamestate[0x42] = 0
0x0095: .byte
0x0096: set loop = 0xff
0x0098: var offset = gamestate[0x41]
        offset += gamestate[0x42] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x43])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x43])->bytes[offset + 1] << 8
0x009A: store_data_resource 0x96
0x009C: loop 0x0098
0x009F: inc game_state[0x42]
0x00A1: inc game_state[0x97]
0x00A3: word_3AE2 = gamestate[0x42]
0x00A5: cmp word_3EA2, 0x0e
0x00A7: jnc 0x0098
0x00AA: op_0B 0x00
0x00AC: store_data_resource 0x96
0x00AE: loop 0x00aa
0x00B1: word_3AE4 = gamestate[0x98]
0x00B3: push_byte(word_3AE4 & 0xFF)
0x00B4: data_res = resource_get(pop_byte())
0x00B5: .word
0x00B6: word_3AE4 = 0
0x00B7: word_3AE2 = 0x0f00
0x00BA: memcpy 0x700
0x00BB: .byte
0x00BC: push_byte(running_script_idx)
0x00BD: data_res = resource_get(pop_byte())
0x00BE: word_3AE2 = 0x07
0x00C0: write_resource(word_3AE2)
0x00C1: word_3AE2 = gamestate[0x98]
0x00C3: resource_release
0x00C4: word_3AE2 = 0x10
0x00C6: word_3AE2 = load_resource(word_3AE2)
0x00C7: gamestate[0x98] = word_3AE2
0x00C9: word_3AE2 = gamestate[0x56]
0x00CB: .word
0x00CC: op_9E
0x00CD: dec word_3AE2
0x00CE: word_3AE4 = word_3AE2
0x00CF: word_3AE2 &= 0xff00
0x00D2: gamestate[0x54] = word_3AE2
0x00D4: gamestate[0x96] = word_3AE2
0x00D6: .byte
0x00D7: var offset = gamestate[0x54]
        offset += gamestate[0x55] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x56])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x56])->bytes[offset + 1] << 8
0x00D9: store_data_resource 0x96
0x00DB: loop 0x00d7
0x00DE: dec game_state[0x55]
0x00E0: dec game_state[0x97]
0x00E2: test game_state[0x55]
0x00E4: jns 0x00d7
0x00E7: word_3AE2 = 0x10
0x00E9: write_resource(word_3AE2)
0x00EA: word_3AE2 = gamestate[0x98]
0x00EC: resource_release
0x00ED: draw_and_set $("Your game is saved.")
0x00FC: wait_escape
0x00FD: peek_and_pop
0x00FE: op_1F
0x00FF: draw_ui_full
0x0100: gamestate[0x3d] = 0
0x0102: gamestate[0x3e] = 0
0x0104: retf

0x0105: draw_rectangle 0x0a, 0x38, 0x1e, 0x60
0x010A: set_msg $("The game is paused")
0x0118: wait_event 0xA244, 'R', 0x00ff, 't', 0x380a, 0x1e, 'h', 0xe00a, '<', 0x12ff, 0x09, 0x12, '`', 0xf178, 0x1e, 'Q', 0x618a, 0x82, 0x89, ':', 0xd244, 0x08, '"', 0xff60, 'C', 0xfa3b, "RIGHT", 0xfe52, '"', 0x0c1b, '\', 0x8800, 'R', 0x00ff, 'S', 0x016e, 'B', 0x016c, 'X', 0x020c, "#[1-7]", 0x4942, "#[1-7]", 0x899a, 0x9a, 0x83, 0x11, '^', 0x0658, "Unknown", 0x1100, 0x89, 0x11, "LEFT", 0xde66, 0x11, '^', 0x6c45, "#[1-7]", 0x7588, 'Y', 0x0a74, 0x18, 0x1e, '(', 0xf578, 0x92, '"', 0x2424, 'H', 0x22a2, 'L', 0xffd1, 0x1d, 'h', 0x0900, 0x81, 'X', 0x8d05, "Unknown", 0x8112, 'A', 0x0190, 'D', 0x016e, 'T', 0x6e53, "#[1-7]", 0x6c42, "#[1-7]", 0x7d76, 'x', 0x240d, 'i', 0x1863, 'o', 0x047f, 'L', 0xfede, '%', 0x8ca9, 'o', 0x9cd8, 'b', 0xd2a1, 'f', 0x1900, 0x06, 0x81, 0x89, "Unknown", 0xc980, 'F', 0xd301, 'p', 0xc101, 'c', 0x0101, 0x97, "#[1-7]", 0x919b, "#[1-7]", 0x58ff, 0x0c, "Unknown", 0x4200, 0x97, "#[1-7]", 0x0619, 0x81, 'h', 0x1207, 0x86, 0x11, 0x87, 'h', 0x1206, 0x85, 0x0a, 0x07, ':', 0x12c0, "LEFT", 0x5852, "#[1-7]", 0x0c58, "LEFT", 0x4200, 0x97, "#[1-7]", 0x0619, 0x81, 'R', 0x0158, 'X', 0x430c, 0x04, 'B', 0x0197, 'R', 0x0158, 0x05, 0x1f, '@', 0x4501, '%', 0x7402, 0x05, '8', 0x7823, 'x', 0xdff5, '@', 0x4e90, 's', 0x12e6, '*', 0x544d, '$', 0xa419, 'A', 0xa560, '0', 0x51c0, 0x9d, 'B', 0x34d3, 'f', 0x008e, "LEFT", 0x5975, 't', 0x180a, 0x1e, '(', 0x0558, '|', 0x4200, 'l', 0x7601, 'c', 0x02bd, 'B', 0x027e, 'x', 0xa2f0, '`', 0xf4dd, 0x0c, ')', 0x0613, 'o', 0x6ca0, ')', 0x3324, 'x', 0xa94a, '5', 0x9052, '@', 0x787d, 0x09, '_', 0x5413, 'Q', 0x1dff, 'h', 0x8c00, 'u', 0xbc45, 0x02, 0x05, 0x06, 0x09, "Unknown", 0x1813, '%', 0x1f3f, 'B', 0x027a, '(', 0x0a0b, 'V', 0x0b0b, 0x13, 0x0a, 'U', 0x0b13, '%', 0x6152, 0x02, '&', 0x911f, 'Y', 0x787d, 0x0a, '$', 0x0a12, '1', 0x9cba, 0x80, 'M', 0x0826, "Unknown", 0x787e, 'X', 0xe044, '*', 0x6866, '^', 0xa270, '&', 0xc314, 'g', 0x69c6, '@', 0x777d, 'P', 0xa42d, '&', 0xc419, 'E', 0x5530, '0', 0xe1cd, 0x13, 0x9f, '4', 0x219a, 0x80, '#', 0x853b, '&', 0xcd68, 0x1c, "Unknown", 0x7588, 'Y', 0x0468, '>', 0x45ff, 'F', 0x4b02, 'Z', 0x5a4c, 'S', 0x016e, 'B', 0x016c, 'X', 0x0014, "Unknown", 0xc852, 0x02, 0x06, 0x06, 0x0b, 0x0a, 0x13, 0x11, 'I', 0x02d7, 0x05, 0x1f, '@', 0x4102, 'Q', 0x7403, 0x02, 0x08, 0x16, 0x90, 'x', 0x8df3, '`', 0xf1f9, ')', 0xfea3, 'z', 0x1100, 'G', 0x4811, 0x09, "ENTER", 0x0a83, 'H', 0xb130, 0x83, 0x09, '>', 0x8983, 0x10, 0x80, "#[1-7]", 0x030e, "ESC", 0x0351, 0xff
0x030E: op_32 0xb1
0x0310: op_50
0x0311: jns 0x0445
0x0314: data_res = resource_get(pop_byte())
0x0315: op_4E
0x0316: jns 0x0b21
0x0319: gamestate[0x05] = 0
0x031B: op_48 0x13
0x031D: word_3AE2 = gamestate[0x08]
0x031F: set loop = 0x25
0x0321: inc byte [word_3AE4]
0x0322: shl byte [word_3AE4], 1
0x0323: shl byte [word_3AE4], 1
0x0324: shl byte [word_3AE4], 1
0x0325: word_3AE2 = 0x02
0x0327: ui_draw_string
0x0328: write_character_name
0x0329: inc game_state[0x48]
0x032B: word_3AE2 = gamestate[0x48]
0x032D: inc word_3AE2
0x032E: cmp word_3AE2, gamestate[0x1F]
0x0330: jnc 0x02f9
0x0333: word_3AE2 = 0x00
0x0335: op_50
0x0336: jns 0x3e44
0x0339: data_res = resource_get(pop_byte())
0x033A: inc word_3AE2
0x033B: jmp 0x0335
0x033E: word_3AE4 = word_3AE2
0x033F: word_3AE2 = gamestate[word_3AE4 + 0x11]
0x0341: word_3AE4 = gamestate[0x48]
0x0343: gamestate[word_3AE4 + 0x0A] = word_3AE2
0x0345: set loop = 0x06
0x0347: word_3AE2 = 0x00
0x0349: gamestate[word_3AE4 + 0x18] = word_3AE2
0x034B: loop 0x0347
0x034E: jmp 0x00ff
0x0351: set loop = 0x06
0x0353: word_3AE2 = gamestate[word_3AE4 + 0x11]
0x0355: gamestate[word_3AE4 + 0x0A] = word_3AE2
0x0357: loop 0x0353
0x035A: jmp 0x00ff
0x035D: word_3AE2 = gamestate[0x05]
0x035F: word_3AE2 &= 0x01
0x0361: test word_3AE2
0x0362: jnz 0x0104
0x0365: set loop = 0x03
0x0367: push_byte(word_3AE4 & 0xFF)
0x0368: op_0D 0x038d
0x036B: word_3AE4 = word_3AE2
0x036C: word_3AE2 = gamestate[word_3AE4 + 0x00]
0x036E: test word_3AE2
0x036F: jz 0x0383
0x0372: dec word_3AE2
0x0373: gamestate[word_3AE4 + 0x00] = word_3AE2
0x0375: test word_3AE2
0x0376: jnz 0x0383
0x0379: pop byte
0x037A: push_byte(word_3AE4 & 0xFF)
0x037B: op_0D 0x0391
0x037E: word_3AE4 = word_3AE2
0x037F: word_3AE2 = 0x00
0x0381: gamestate[word_3AE4 + 0x00] = word_3AE2
0x0383: pop byte
0x0384: loop 0x0367
0x0387: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x0395
        }
        game_state[6] = al
0x038A: word_3AE2 = gamestate[0x23]
0x038C: retf

