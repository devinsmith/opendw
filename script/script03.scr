Disassembling script03.bin (5390 bytes)

# Script 3 is loaded with word_3AE2 set to some value
# Common values values are 01-09 and 0xFF (see script71)
# This typically is the multiplier used.

0x0000: gamestate[0x28] = word_3AE2
0x0002: push_byte(running_script_idx)
0x0003: peek_and_pop
0x0004: gamestate[0x53] = word_3AE2
0x0006: gamestate[0x35] = 0xFF
0x0008: gamestate[0x36] = 0

# Shifts the bytes by 6
# gamestate[23] = gamestate[16]
# gamestate[22] = gamestate[15]
# ...

0x000A: set loop = 0x06
0x000C: word_3AE2 = gamestate[word_3AE4 + 10]
0x000E: gamestate[word_3AE4 + 17] = word_3AE2
0x0010: loop 0x000c

0x0013: gamestate[0x20] = gamestate[0x1F]
0x0016: call 0x04F1
0x0019: call 0x016b

0x001C: call 0x01d2

0x001F: load_resource res: 0x12, offset: 0x001a
0x0023: draw_rectangle 0x16, 0x00, 0x28, 0x98
0x0028: draw_pattern
0x0029: load_resource res: 0x12, offset: 0x0000
0x002D: call 0x010e
0x0030: set_msg $(" appear.\r\r")
0x0038: load_resource res: 0x12, offset: 0x0097
0x003C: jc 0x0028
0x003F: jmp 0x0068
0x0042: call 0x01d2
0x0045: load_resource res: 0x12, offset: 0x001a
0x0049: draw_rectangle 0x16, 0x00, 0x28, 0x98
0x004E: draw_and_set $("You still face ")
0x005A: call 0x010e
0x005D: set_msg $(".\r\r")
0x0061: load_resource res: 0x12, offset: 0x0097
0x0065: jc 0x004e
0x0068: draw_ui_full
0x0069: call 0x0738
0x006C: load_resource res: 0x03, offset: 0x08b6
0x0070: gamestate[0x72] = 0
0x0072: gamestate[0x75] = 0
0x0074: draw_pattern
0x0075: test game_state[0x72]
0x0077: jnz 0x007d
0x007A: call 0x071b
0x007D: test game_state[0x75]
0x007F: jnz 0x0085
0x0082: call 0x0727
0x0085: word_3AE2 = gamestate[0x73]
0x0087: cmp word_3AE2, gamestate[0x76]
0x0089: jc 0x0092
0x008C: call 0x0fac
0x008F: jmp 0x0075
0x0092: test word_3AE2
0x0093: jz 0x009c
0x0096: call 0x0afa
0x0099: jmp 0x0075
0x009C: call 0x016b
0x009F: gamestate[0x36] = 0xFF
0x00A1: word_3AE2 = 0x00
0x00A3: call 0x06b5
0x00A6: jz 0x00b5
0x00A9: gamestate[0x41] = 0xFF
0x00AB: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x00E2
        }
        game_state[6] = al
0x00AE: test game_state[0x41]
0x00B0: jz 0x0042
0x00B3: gamestate[0x36] = 0
0x00B5: set loop = 0x06
0x00B7: op_0B 0x11
0x00B9: gamestate[word_3AE4 + 0x0A] = word_3AE2
0x00BB: loop 0x00b7
0x00BE: op_19 0x20, 0x1f
0x00C1: gamestate[0xdb] = 0
0x00C3: gamestate[0x35] = 0
0x00C5: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x00ED
        }
        game_state[6] = al
0x00C8: call 0x0986
0x00CB: draw_ui_full
0x00CC: draw_pattern
0x00CD: call 0x0669
0x00D0: load_resource res: 0x03, offset: 0x08b6
0x00D4: op_91
0x00D5: load_resource res: 0x16, offset: 0x0000
0x00D9: gamestate[0x3d] = 0
0x00DB: word_3AE2 = gamestate[0x36]
0x00DD: op_3C
0x00DE: nop
0x00DF: cmp word_3EA2, 0x01
0x00E1: retf
0x00E2: word_3AE2 = get_char_data 0x4c
0x00E4: word_3AE2 &= 0x81
0x00E6: test word_3AE2
0x00E7: jnz 0x00ec
0x00EA: gamestate[0x41] = 0
0x00EC: ret
0x00ED: word_3AE2 = get_char_data 0x0d
0x00EF: set_char_prop 0x0c
0x00F1: word_3AE2 = get_char_data 0x0f
0x00F3: set_char_prop 0x0e
0x00F5: word_3AE2 = get_char_data 0x11
0x00F7: set_char_prop 0x10
0x00F9: word_3AE2 = get_char_data 0x13
0x00FB: set_char_prop 0x12
0x00FD: word_3AE2 = 0x07
0x00FF: test_player_property 0x4c
0x0101: jnz 0x010d
0x0104: word_3AE2 = 0x00
0x0106: op_60
0x0107: clc
0x0108: .word
0x0109: word_3AE2 = get_char_data 0x1a
0x010B: set_char_prop 0x18
0x010D: ret
0x010E: word_3AE4 = 0
0x010F: push_byte(word_3AE4 & 0xFF)
0x0110: peek_and_pop
0x0111: push (word|byte)
0x0112: test word_3AE2
0x0113: jz 0x012d
0x0116: gamestate[0x09] = 0xFF
0x0118: cmp word_3EA2, 0x03
0x011A: jz 0x0126
0x011D: inc word_3AE2
0x011E: call 0x06b5
0x0121: jz 0x0126
0x0124: gamestate[0x09] = 0
0x0126: set_msg $(", ")
0x012D: peek_and_pop
0x012E: push (word|byte)
0x012F: call 0x06b5
0x0132: jz 0x0149
0x0135: peek_and_pop
0x0136: push (word|byte)
0x0137: load_resource res: 0x03, offset: 0x014b
0x013B: peek_and_pop
0x013C: inc word_3AE2
0x013D: push (word|byte)
0x013E: cmp word_3EA2, 0x04
0x0140: jz 0x0149
0x0143: call 0x06b5
0x0146: jnz 0x0110
0x0149: peek_and_pop
0x014A: ret
0x014B: call 0x06b5
0x014E: gamestate[0x09] = word_3AE2
0x0150: dec game_state[0x09]
0x0152: op_81 word_3AE2
0x0153: word_3AE2 = 0xa0
0x0155: write_number
0x0156: .word
0x0157: word_3AE2 = gamestate[0x41]
0x0159: op_30 0x0029
0x015C: extract_string
0x015D: .byte
0x015E: word_3AE2 = 0xa0
0x0160: write_number
0x0161: op_10 0x41, 0x09
0x0164: op_34 0x0a
0x0166: op_81 word_3AE2
0x0167: word_3AE2 = 0xa7
0x0169: write_number
0x016A: retf

# Function 16B
0x016B: gamestate[0x47] = 0
0x016D: word_3AE2 = 0x03
0x016F: gamestate[0x45] = word_3AE2
0x0171: call 0x06b5
0x0174: jz 0x01c5

0x0177: op_10 0x41, 0x09
0x017A: gamestate[0x49] = word_3AE2
0x017C: word_3AE2 = gamestate[0x45]
0x017E: op_27
0x017F: gamestate[0x4b] = word_3AE2
0x0181: call 0x06b5
0x0184: jz 0x0192
0x0187: op_10 0x41, 0x09
0x018A: cmp word_3AE2, gamestate[0x49]
0x018C: jz 0x01c5
0x018F: jnc 0x01c5
0x0192: gamestate[0x47] = 0xFF
0x0194: word_3AE2 = gamestate[0x45]
0x0196: op_3B
0x0197: stc
0x0198: gamestate[0x4c] = word_3AE2
0x019A: word_3AE4 = gamestate[0x27]
0x019C: dec [mem]
0x019D: op_0D 0x03a4
0x01A0: cmp word_3AE2, gamestate[0x45]
0x01A2: jz 0x01aa
0x01A5: cmp word_3AE2, gamestate[0x4B]
0x01A7: jnz 0x01af
0x01AA: op_3B
0x01AB: clc
0x01AC: op_15 0x03a4
0x01AF: loop 0x019d
0x01B2: .word
0x01B3: word_3AE4 = gamestate[0x45]
0x01B5: shl byte [word_3AE4], 1
0x01B6: op_0D 0x04c6
0x01B9: push (word|byte)
0x01BA: op_0D 0x04c4
0x01BD: op_15 0x04c6
0x01C0: peek_and_pop
0x01C1: op_15 0x04c4
0x01C4: .byte

0x01C5: word_3AE2 = gamestate[0x45]
0x01C7: word_3AE2--
0x01C8: test word_3AE2
0x01C9: jnz 0x016f

0x01CC: test game_state[0x47]
0x01CE: jnz 0x016b
0x01D1: ret

# Function 1D2
0x01D2: word_3AE2 = 0x00
0x01D4: call 0x06b5
0x01D7: op_27
0x01D8: gamestate[0x09] = word_3AE2

# Offset to monster string.
0x01DA: .word
0x01DB: word_3AE2 = gamestate[0x41]
0x01DD: word_3AE2 += 0x0029
0x01E0: ui_header_random_encounter

0x01E1: .byte
0x01E2: test game_state[0xE0]
0x01E4: js 0x01eb
0x01E7: op_10 0x41, 0x0b
0x01EA: random_encounter?
0x01EB: ret

0x01EC: test word_3AE2
0x01ED: js 0x01f4
0x01F0: gamestate[0x06] = word_3AE2
0x01F2: write_character_name
0x01F3: retf
0x01F4: call 0x06b5
0x01F7: .word
0x01F8: word_3AE2 = gamestate[0x41]
0x01FA: op_30 0x0029
0x01FD: extract_string
0x01FE: .byte
0x01FF: retf
0x0200: set loop = 0x06
0x0202: jmp 0x020b
0x0205: set loop = 0x03
0x0207: jmp 0x020b
0x020A: word_3AE4 = 0
0x020B: push (word|byte)
0x020C: gamestate[0x4d] = word_3AE4
0x020E: test word_3AE2
0x020F: js 0x022d
0x0212: gamestate[0x06] = word_3AE2
0x0214: word_3AE2 = get_char_data 0x4e
0x0216: cmp word_3EA2, 0x03
0x0218: jz 0x0227
0x021B: op_2F 0x4d
0x021D: op_21
0x021E: shl byte [word_3AE4], 1
0x021F: .word
0x0220: op_0D 0x0236
0x0223: extract_string
0x0224: .byte
0x0225: peek_and_pop
0x0226: retf
0x0227: peek_and_pop
0x0228: gamestate[0x09] = 0
0x022A: jmp 0x01ec
0x022D: call 0x06b5
0x0230: op_10 0x41, 0x22
0x0233: jmp 0x0216
0x0236: op_48 0x02
0x0238: stc
0x0239: op_02
0x023A: op_4E
0x023B: op_02
0x023C: op_51 0x4b02
0x023F: op_02
0x0240: ret
0x0241: op_02
0x0242: push (word|byte)
0x0243: op_02
0x0244: load_resource res: 0x02, offset: 0x0254
0x0248: if ++byte_3AE4 != 0xA4 jmp 0x4900
0x024C: op_A2
0x024D: .word
0x024E: ret
0x024F: op_E4
0x0250: .word
0x0251: if ++byte_3AE4 != 0x9A jmp 0x5400
0x0255: op_C0
0x0256: loop 0x9280
0x0259: clc
0x025A: .word
0x025B: call 0x06b5
0x025E: op_10 0x41, 0x22
0x0261: cmp word_3EA2, 0x4403
0x0264: draw_and_set $("")
0x0266: op_10 0x41, 0x0e
0x0269: word_3AE2 &= 0x9901
0x026C: jnz 0x0273
0x026F: set_msg $("a ")
0x0272: retf
0x0273: set_msg $("an ")
0x0277: retf
0x0278: .word
0x0279: .word
0x027A: .word
0x027B: .word
0x027C: .word
0x027D: .word
0x027E: .word
0x027F: .word
0x0280: .word
0x0281: .word
0x0282: .word
0x0283: .word
0x0284: .word
0x0285: .word
0x0286: .word
0x0287: .word
0x0288: .word
0x0289: .word
0x028A: .word
0x028B: .word
0x028C: .word
0x028D: .word
0x028E: .word
0x028F: .word
0x0290: .word
0x0291: .word
0x0292: .word
0x0293: .word
0x0294: .word
0x0295: .word
0x0296: .word
0x0297: .word
0x0298: .word
0x0299: .word
0x029A: .word
0x029B: .word
0x029C: .word
0x029D: .word
0x029E: .word
0x029F: .word
0x02A0: .word
0x02A1: .word
0x02A2: .word
0x02A3: .word
0x02A4: .word
0x02A5: .word
0x02A6: .word
0x02A7: .word
0x02A8: .word
0x02A9: .word
0x02AA: .word
0x02AB: .word
0x02AC: .word
0x02AD: .word
0x02AE: .word
0x02AF: .word
0x02B0: .word
0x02B1: .word
0x02B2: .word
0x02B3: .word
0x02B4: .word
0x02B5: .word
0x02B6: .word
0x02B7: .word
0x02B8: .word
0x02B9: .word
0x02BA: .word
0x02BB: .word
0x02BC: .word
0x02BD: .word
0x02BE: .word
0x02BF: .word
0x02C0: .word
0x02C1: .word
0x02C2: .word
0x02C3: .word
0x02C4: .word
0x02C5: .word
0x02C6: .word
0x02C7: .word
0x02C8: .word
0x02C9: .word
0x02CA: .word
0x02CB: .word
0x02CC: .word
0x02CD: .word
0x02CE: .word
0x02CF: .word
0x02D0: .word
0x02D1: .word
0x02D2: .word
0x02D3: .word
0x02D4: .word
0x02D5: .word
0x02D6: .word
0x02D7: .word
0x02D8: .word
0x02D9: .word
0x02DA: .word
0x02DB: .word
0x02DC: .word
0x02DD: .word
0x02DE: .word
0x02DF: .word
0x02E0: .word
0x02E1: .word
0x02E2: .word
0x02E3: .word
0x02E4: .word
0x02E5: .word
0x02E6: .word
0x02E7: .word
0x02E8: .word
0x02E9: .word
0x02EA: .word
0x02EB: .word
0x02EC: .word
0x02ED: .word
0x02EE: .word
0x02EF: .word
0x02F0: .word
0x02F1: .word
0x02F2: .word
0x02F3: .word
0x02F4: .word
0x02F5: .word
0x02F6: .word
0x02F7: .word
0x02F8: .word
0x02F9: .word
0x02FA: .word
0x02FB: .word
0x02FC: .word
0x02FD: .word
0x02FE: .word
0x02FF: .word
0x0300: .word
0x0301: .word
0x0302: .word
0x0303: .word
0x0304: .word
0x0305: .word
0x0306: .word
0x0307: .word
0x0308: .word
0x0309: .word
0x030A: .word
0x030B: .word
0x030C: .word
0x030D: .word
0x030E: .word
0x030F: .word
0x0310: .word
0x0311: .word
0x0312: .word
0x0313: .word
0x0314: .word
0x0315: .word
0x0316: .word
0x0317: .word
0x0318: .word
0x0319: .word
0x031A: .word
0x031B: .word
0x031C: .word
0x031D: .word
0x031E: .word
0x031F: .word
0x0320: .word
0x0321: .word
0x0322: .word
0x0323: .word
0x0324: .word
0x0325: .word
0x0326: .word
0x0327: .word
0x0328: .word
0x0329: .word
0x032A: .word
0x032B: .word
0x032C: .word
0x032D: .word
0x032E: .word
0x032F: .word
0x0330: .word
0x0331: .word
0x0332: .word
0x0333: .word
0x0334: .word
0x0335: .word
0x0336: .word
0x0337: .word
0x0338: .word
0x0339: .word
0x033A: .word
0x033B: .word
0x033C: .word
0x033D: .word
0x033E: .word
0x033F: .word
0x0340: .word
0x0341: .word
0x0342: .word
0x0343: .word
0x0344: .word
0x0345: .word
0x0346: .word
0x0347: .word
0x0348: .word
0x0349: .word
0x034A: .word
0x034B: .word
0x034C: .word
0x034D: .word
0x034E: .word
0x034F: .word
0x0350: .word
0x0351: .word
0x0352: .word
0x0353: .word
0x0354: .word
0x0355: .word
0x0356: .word
0x0357: .word
0x0358: .word
0x0359: .word
0x035A: .word
0x035B: .word
0x035C: .word
0x035D: .word
0x035E: .word
0x035F: .word
0x0360: .word
0x0361: .word
0x0362: .word
0x0363: .word
0x0364: .word
0x0365: .word
0x0366: .word
0x0367: .word
0x0368: .word
0x0369: .word
0x036A: .word
0x036B: .word
0x036C: .word
0x036D: .word
0x036E: .word
0x036F: .word
0x0370: .word
0x0371: .word
0x0372: .word
0x0373: .word
0x0374: .word
0x0375: .word
0x0376: .word
0x0377: .word
0x0378: .word
0x0379: .word
0x037A: .word
0x037B: .word
0x037C: .word
0x037D: .word
0x037E: .word
0x037F: .word
0x0380: .word
0x0381: .word
0x0382: .word
0x0383: .word
0x0384: .word
0x0385: .word
0x0386: .word
0x0387: .word
0x0388: .word
0x0389: .word
0x038A: .word
0x038B: .word
0x038C: .word
0x038D: .word
0x038E: .word
0x038F: .word
0x0390: .word
0x0391: .word
0x0392: .word
0x0393: .word
0x0394: .word
0x0395: .word
0x0396: .word
0x0397: .word
0x0398: .word
0x0399: .word
0x039A: .word
0x039B: .word
0x039C: .word
0x039D: .word
0x039E: .word
0x039F: .word
0x03A0: .word
0x03A1: .word
0x03A2: .word
0x03A3: .word
0x03A4: .word
0x03A5: .word
0x03A6: .word
0x03A7: .word
0x03A8: .word
0x03A9: .word
0x03AA: .word
0x03AB: .word
0x03AC: .word
0x03AD: .word
0x03AE: .word
0x03AF: .word
0x03B0: .word
0x03B1: .word
0x03B2: .word
0x03B3: .word
0x03B4: .word
0x03B5: .word
0x03B6: .word
0x03B7: .word
0x03B8: .word
0x03B9: .word
0x03BA: .word
0x03BB: .word
0x03BC: .word
0x03BD: .word
0x03BE: .word
0x03BF: .word
0x03C0: .word
0x03C1: .word
0x03C2: .word
0x03C3: .word
0x03C4: .word
0x03C5: .word
0x03C6: .word
0x03C7: .word
0x03C8: .word
0x03C9: .word
0x03CA: .word
0x03CB: .word
0x03CC: .word
0x03CD: .word
0x03CE: .word
0x03CF: .word
0x03D0: .word
0x03D1: .word
0x03D2: .word
0x03D3: .word
0x03D4: .word
0x03D5: .word

# Data copied from 0x4FE (Resource 31) ?
0x03D6: .word
0x03D7: .word
0x03D8: .word
0x03D9: .word
0x03DA: .word
0x03DB: .word
0x03DC: .word
0x03DD: .word
0x03DE: .word
0x03DF: .word # Start of something
0x03E0: .word
0x03E1: .word
0x03E2: .word
0x03E3: .word
0x03E4: .word
0x03E5: .word
0x03E6: .word
0x03E7: .word
0x03E8: .word
0x03E9: .word
0x03EA: .word
0x03EB: .word
0x03EC: .word
0x03ED: .word
0x03EE: .word
0x03EF: .word
0x03F0: .word
0x03F1: .word
0x03F2: .word
0x03F3: .word
0x03F4: .word
0x03F5: .word
0x03F6: .word

# Zero'd out
0x03F7: .word
0x03F8: .word
0x03F9: .word
0x03FA: .word
0x03FB: .word
0x03FC: .word
0x03FD: .word
0x03FE: .word

0x03FF: .word
0x0400: .word
0x0401: .word
0x0402: .word
0x0403: .word
0x0404: .word
0x0405: .word
0x0406: .word
0x0407: .word
0x0408: .word
0x0409: .word
0x040A: .word
0x040B: .word
0x040C: .word
0x040D: .word
0x040E: .word
0x040F: .word
0x0410: .word
0x0411: .word
0x0412: .word
0x0413: .word
0x0414: .word
0x0415: .word
0x0416: .word
0x0417: .word
0x0418: .word
0x0419: .word
0x041A: .word
0x041B: .word
0x041C: .word
0x041D: .word
0x041E: .word
0x041F: .word
0x0420: .word
0x0421: .word
0x0422: .word
0x0423: .word
0x0424: .word
0x0425: .word
0x0426: .word
0x0427: .word
0x0428: .word
0x0429: .word
0x042A: .word
0x042B: .word
0x042C: .word
0x042D: .word
0x042E: .word
0x042F: .word
0x0430: .word
0x0431: .word
0x0432: .word
0x0433: .word
0x0434: .word
0x0435: .word
0x0436: .word
0x0437: .word
0x0438: .word
0x0439: .word
0x043A: .word
0x043B: .word
0x043C: .word
0x043D: .word
0x043E: .word
0x043F: .word
0x0440: .word
0x0441: .word
0x0442: .word
0x0443: .word
0x0444: .word
0x0445: .word
0x0446: .word
0x0447: .word
0x0448: .word
0x0449: .word
0x044A: .word
0x044B: .word
0x044C: .word
0x044D: .word
0x044E: .word
0x044F: .word
0x0450: .word
0x0451: .word
0x0452: .word
0x0453: .word
0x0454: .word
0x0455: .word
0x0456: .word
0x0457: .word
0x0458: .word
0x0459: .word
0x045A: .word
0x045B: .word
0x045C: .word
0x045D: .word
0x045E: .word
0x045F: .word
0x0460: .word
0x0461: .word
0x0462: .word
0x0463: .word
0x0464: .word
0x0465: .word
0x0466: .word
0x0467: .word
0x0468: .word
0x0469: .word
0x046A: .word
0x046B: .word
0x046C: .word
0x046D: .word
0x046E: .word
0x046F: .word
0x0470: .word
0x0471: .word
0x0472: .word
0x0473: .word
0x0474: .word
0x0475: .word
0x0476: .word
0x0477: .word
0x0478: .word
0x0479: .word
0x047A: .word
0x047B: .word
0x047C: .word
0x047D: .word
0x047E: .word
0x047F: .word
0x0480: .word
0x0481: .word
0x0482: .word
0x0483: .word
0x0484: .word
0x0485: .word
0x0486: .word
0x0487: .word
0x0488: .word
0x0489: .word
0x048A: .word
0x048B: .word
0x048C: .word
0x048D: .word
0x048E: .word
0x048F: .word
0x0490: .word
0x0491: .word
0x0492: .word
0x0493: .word
0x0494: .word
0x0495: .word
0x0496: .word
0x0497: .word
0x0498: .word
0x0499: .word
0x049A: .word
0x049B: .word
0x049C: .word
0x049D: .word
0x049E: .word
0x049F: .word
0x04A0: .word
0x04A1: .word
0x04A2: .word
0x04A3: .word
0x04A4: .word
0x04A5: .word
0x04A6: .word
0x04A7: .word
0x04A8: .word
0x04A9: .word
0x04AA: .word
0x04AB: .word
0x04AC: .word
0x04AD: .word
0x04AE: .word
0x04AF: .word
0x04B0: .word
0x04B1: .word
0x04B2: .word
0x04B3: .word
0x04B4: .word
0x04B5: .word
0x04B6: .word
0x04B7: .word
0x04B8: .word
0x04B9: .word
0x04BA: .word
0x04BB: .word
0x04BC: .word
0x04BD: .word
0x04BE: .word
0x04BF: .word
0x04C0: .word
0x04C1: .word
0x04C2: .word
0x04C3: .word
0x04C4: .word
0x04C5: .word

# Data
0x04C6: 0x03D6
0x04C8: 0x0412
0x04CA: 0x0404
0x04CC: 0x048A

0x04CE: .word
0x04CF: .word
0x04D0: .word
0x04D1: .word
0x04D2: .word
0x04D3: .word
0x04D4: .word
0x04D5: .word
0x04D6: .word
0x04D7: .word
0x04D8: .word
0x04D9: .word
0x04DA: .word
0x04DB: .word
0x04DC: .word
0x04DD: .word
0x04DE: .word
0x04DF: .word
0x04E0: .word
0x04E1: .word
0x04E2: .word
0x04E3: .word
0x04E4: .word
0x04E5: .word
0x04E6: .word
0x04E7: .word
0x04E8: .word
0x04E9: .word
0x04EA: .word
0x04EB: .word
0x04EC: .word
0x04ED: .word
0x04EE: .word
0x04EF: .word
0x04F0: .word

# Function 4F1?
# Purpose unknown

0x04F1: call 0x0669   # Run initialization?
0x04F4: gamestate[0x27] = 0

# Loads word into gamestate[0x58]
0x04F6: .word
0x04F7: gamestate[0x58] = 0
        gamestate[0x59] = 0
0x04F9: word_3AE4 = 0x02
0x04FB: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x04FD: gamestate[0x58] = word_3AE2

# Check input parameter of script.
# Check if we need to get the multiplier from the resource.
0x04FF: .byte
0x0500: word_3AE2 = gamestate[0x28]
0x0502: test word_3AE2
0x0503: jns 0x050a

# Set multiplier (into word_3AE2)
0x0506: word_3AE4 = 0
0x0507: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x0509: word_3AE2 = op_4D # game ticks * multiplier, result back into word_3AE2

# Controlling value
0x050A: word_3AE2 = word_3AE2 * 2   # op_2A
0x050B: inc word_3AE2
0x050C: word_3AE4 = word_3AE2
0x050D: .word
0x050E: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x0510: gamestate[0x58] = word_3AE2

# Set unknown1?
0x0512: .byte
0x0513: word_3AE4 = 0
0x0514: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8

# Shift right 6 places
0x0516: word_3AE2 = word_3AE2 >> 1
0x0517: word_3AE2 = word_3AE2 >> 1
0x0518: word_3AE2 = word_3AE2 >> 1
0x0519: word_3AE2 = word_3AE2 >> 1
0x051A: word_3AE2 = word_3AE2 >> 1
0x051B: word_3AE2 = word_3AE2 >> 1
0x051C: inc word_3AE2
0x051D: gamestate[0x28] = word_3AE2

0x051F: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x0521: word_3AE2 &= 0x3f
0x0523: gamestate[0x5c] = word_3AE2

0x0525: inc byte [word_3AE4]
0x0526: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x0528: gamestate[word_3AE4 + 0x28] = word_3AE2
0x052A: if ++byte_3AE4 != 0x0D jmp 0x0526

0x052E: gamestate[0x47] = 0
0x0530: gamestate[0x48] = 0

0x0532: .word
0x0533: gamestate[0x58] = 0
        gamestate[0x59] = 0
0x0535: word_3AE4 = 0
0x0536: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x0538: gamestate[0x58] = word_3AE2   # 0x1F9

0x053A: .byte
0x053B: word_3AE4 = gamestate[0x48]
0x053D: word_3AE2 = gamestate[0x29 + word_3AE4]
0x053F: word_3AE2 &= 0x1f
0x0541: word_3AE2--
0x0542: test word_3AE2
0x0543: jns 0x054a

0x0546: word_3AE4 = 0
0x0547: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x0549: word_3AE2 = op_4D # multiplier

0x054A: word_3AE4 = word_3AE2
0x054B: shl byte [word_3AE4], 1
0x054C: inc byte [word_3AE4]

0x054D: .word
0x054E: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x0550: gamestate[0x58] = word_3AE2  # 0x4FE

0x0552: .byte
0x0553: word_3AE2 = gamestate[0x47]
0x0555: call 0x06B5

# Copy data (0x20 bytes)
0x0558: word_3AE4 = 0
0x0559: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x055B: script_data[gamestate[0x41]] = word_3AE2
0x055D: if ++byte_3AE4 != 0x21 jmp 0x0559

# Zero out data (8 bytes)
0x0561: word_3AE2 = 0x00
0x0563: script_data[game_state[0x41]] = word_3AE2
0x0565: if ++byte_3AE4 != 0x29 jmp 0x0563

# Shift this data right 4 times.
# Set various monster properties?
0x0569: word_3AE2 = script_data[gamestate[0x41] + 0x9]
0x056C: word_3AE2 = word_3AE2 >> 1
0x056D: word_3AE2 = word_3AE2 >> 1
0x056E: word_3AE2 = word_3AE2 >> 1
0x056F: word_3AE2 = word_3AE2 >> 1
0x0570: script_data[game_state[0x41] + 0x21] = word_3AE2
0x0573: word_3AE2 = script_data[gamestate[0x41] + 0x0a]
0x0576: push word_3AE2
0x0577: word_3AE2 &= 0x1f
0x0579: script_data[game_state[0x41] + 0x0A] = word_3AE2
0x057C: word_3AE2 = pop()
0x057D: word_3AE2 = word_3AE2 >> 1
0x057E: word_3AE2 = word_3AE2 >> 1
0x057F: word_3AE2 = word_3AE2 >> 1
0x0580: word_3AE2 = word_3AE2 >> 1
0x0581: word_3AE2 = word_3AE2 >> 1
0x0582: push word_3AE2
0x0583: word_3AE2 &= 0x01
0x0585: script_data[game_state[0x41] + 0x23] = word_3AE2
0x0588: word_3AE2 = pop()
0x0589: word_3AE2 = word_3AE2 >> 1
0x058A: script_data[game_state[0x41] + 0x22] = word_3AE2
0x058D: word_3AE2 = script_data[gamestate[0x41] + 0x1f]
0x0590: push word_3AE2
0x0591: word_3AE2 &= 0x1f
0x0593: script_data[game_state[0x41] + 0x1F] = word_3AE2
0x0596: word_3AE2 = pop()
0x0597: word_3AE2 = word_3AE2 >> 1
0x0598: word_3AE2 = word_3AE2 >> 1
0x0599: word_3AE2 = word_3AE2 >> 1
0x059A: word_3AE2 = word_3AE2 >> 1
0x059B: word_3AE2 = word_3AE2 >> 1
0x059C: script_data[game_state[0x41] + 0x26] = word_3AE2
0x059F: word_3AE2 = script_data[game_state[0x41] + 0x20]
0x05A2: push word_3AE2
0x05A3: word_3AE2 &= 0x0f
0x05A5: script_data[game_state[0x41] + 0x20] = word_3AE2
0x05A8: word_3AE2 = pop()
0x05A9: word_3AE2 = word_3AE2 >> 1
0x05AA: word_3AE2 = word_3AE2 >> 1
0x05AB: word_3AE2 = word_3AE2 >> 1
0x05AC: word_3AE2 = word_3AE2 >> 1
0x05AD: push word_3AE2
0x05AE: word_3AE2 &= 0x01
0x05B0: script_data[game_state[0x41] + 0x25] = word_3AE2
0x05B3: word_3AE2 = pop()
0x05B4: word_3AE2 = word_3AE2 >> 1
0x05B5: script_data[game_state[0x41] + 0x24] = word_3AE2

0x05B8: .word
0x05B9: word_3AE2 = gamestate[0x41]
0x05BB: word_3AE2 += 0x0008
0x05BE: gamestate[0x41] = word_3AE2

# Extract compressed monster string, we know it can be a maximum of 18 bytes
0x05C0: .byte
0x05C1: set loop = 0x21
0x05C3: var offset = gamestate[0x58]
        offset += gamestate[0x59] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x5A])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x5A])->bytes[offset + 1] << 8
0x05C5: script_data[gamestate[0x41] + word_3AE4] = word_3AE2
0x05C7: if ++byte_3AE4 != 0x33 jmp 0x05c3

0x05CB: word_3AE2 = gamestate[0x47]
0x05CD: call 0x06b5
0x05D0: word_3AE4 = gamestate[0x48]
0x05D2: op_0B 0x2a
0x05D4: op_2D
0x05D5: op_2D
0x05D6: word_3AE2 &= 0x0f
0x05D8: test word_3AE2
0x05D9: jnz 0x05e0
0x05DC: word_3AE2 = 0x09
0x05DE: op_4D
0x05DF: inc word_3AE2
0x05E0: op_18 0x41, 0x09
0x05E3: word_3AE4 = gamestate[0x48]
0x05E5: op_0B 0x2b
0x05E7: cmp word_3EA2, 0x80
0x05E9: op_2D
0x05EA: op_2D
0x05EB: word_3AE2 &= 0x1f
0x05ED: jnc 0x05f3
0x05F0: op_3C
0x05F1: nop
0x05F2: inc word_3AE2
0x05F3: gamestate[0x49] = word_3AE2
0x05F5: op_10 0x41, 0x1f
0x05F8: op_2F 0x49
0x05FA: op_18 0x41, 0x1f
0x05FD: .word
0x05FE: word_3AE4 = gamestate[0x48]
0x0600: op_0B 0x29
0x0602: op_2D
0x0603: op_2D
0x0604: op_2D
0x0605: op_2D
0x0606: op_2D
0x0607: .byte
0x0608: word_3AE2 &= 0x1f
0x060A: test word_3AE2
0x060B: jnz 0x0613
0x060E: op_10 0x41, 0x0a
0x0611: op_4D
0x0612: inc word_3AE2
0x0613: op_18 0x41, 0x0a
0x0616: gamestate[0x49] = word_3AE2
0x0618: word_3AE4 = gamestate[0x27]
0x061A: word_3AE2 = gamestate[0x47]
0x061C: op_15 0x03a4
0x061F: call 0x06d2
0x0622: shl byte [word_3AE4], 1
0x0623: op_15 0x0278
0x0626: .byte
0x0627: dec game_state[0x49]
0x0629: inc game_state[0x27]
0x062B: word_3AE4 = gamestate[0x27]
0x062D: cmp word_3AE4, 0x32
0x062F: jc 0x065e
0x0632: test game_state[0x49]
0x0634: jnz 0x061a
0x0637: inc game_state[0x48]
0x0639: inc game_state[0x48]
0x063B: inc game_state[0x48]
0x063D: inc game_state[0x47]
0x063F: word_3AE2 = gamestate[0x47]
0x0641: cmp word_3AE2, gamestate[0x28]
0x0643: jnc 0x0532
0x0646: word_3AE2 = gamestate[0x47]
0x0648: cmp word_3EA2, 0x04
0x064A: jc 0x065d
0x064D: call 0x06b5
0x0650: word_3AE4 = 0
0x0651: word_3AE2 = word_3AE4
0x0652: op_16 0x41
0x0654: if ++byte_3AE4 != 0x3C jmp 0x0652
0x0658: inc game_state[0x47]
0x065A: jmp 0x0646
0x065D: ret
0x065E: op_10 0x41, 0x0a
0x0661: op_31 0x49
0x0663: op_18 0x41, 0x0a
0x0666: jmp 0x0658

#
# Function 669 (initialization?)
# Mostly zeros out lots of data, except sets some data to 0xB
#

# Zero outs some memory....
0x0669: word_3AE2 = 0x00
0x066B: set loop = 0x63
0x066D: op_15 0x0278
0x0670: loop 0x066d

# Zero outs more memory
0x0673: set loop = 0x31
0x0675: op_15 0x02dc
0x0678: op_15 0x030e
0x067B: op_15 0x0340
0x067E: op_15 0x0372
0x0681: op_15 0x03a4
0x0684: loop 0x0675

# Clear gamestate 4 bytes [110-113]
# Clear gamestate 4 bytes [106-109]
0x0687: set loop = 0x03
0x0689: gamestate[word_3AE4 + 0x6E] = word_3AE2
0x068B: gamestate[word_3AE4 + 0x6A] = word_3AE2
0x068D: loop 0x0689

0x0690: gamestate[0x8c] = 0
0x0692: gamestate[0x8e] = 0
0x0694: gamestate[0xdd] = 0
0x0696: gamestate[0x8d] = 0
0x0698: gamestate[0x8f] = 0
0x069A: gamestate[0x8b] = 0
0x069C: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x06AA
        }
        game_state[6] = al

# Set memory to 0x0B
0x069F: word_3AE2 = 0x0b
0x06A1: set loop = 0x06
0x06A3: op_15 0x04ce
0x06A6: loop 0x06a3
0x06A9: ret


0x06AA: word_3AE2 = 0x00
0x06AC: set_char_prop 0x64
0x06AE: set_char_prop 0x65
0x06B0: ret

0x06B1: call 0x06b5
0x06B4: retf

# Function 6B5 (input is WORD_3AE2)
0x06B5: push_byte(word_3AE4 & 0xFF)
0x06B6: word_3AE4 = (word_3AE2 & 0xFF)
0x06B7: shl byte [word_3AE4], 1

# Set monster offset
0x06B8: .word
0x06B9: word_3AE2 = script_data[0x04C6 + word_3AE4]
0x06BC: gamestate[0x41] = word_3AE2

0x06BE: .byte
0x06BF: word_3AE2 = script_data[gamestate[0x41] + 0x0a]
0x06C2: test word_3AE2
0x06C3: word_3AE4 = pop byte
0x06C4: ret

0x06C5: push (word|byte)
0x06C6: .word
0x06C7: shl byte [word_3AE4], 1
0x06C8: op_0D 0x04c6
0x06CB: gamestate[0x41] = word_3AE2
0x06CD: .byte
0x06CE: pop byte
0x06CF: op_0E
0x06D0: jnc 0x0159
0x06D3: push_byte(word_3AE4 & 0xFF)
0x06D4: op_10 0x41, 0x08
0x06D7: load_resource res: 0x03, offset: 0x06e8
0x06DB: op_10 0x41, 0x04
0x06DE: op_2F 0x5d
0x06E0: jnc 0x06e6
0x06E3: word_3AE2 = 0xff
0x06E5: nop
0x06E6: pop byte
0x06E7: ret

0x06E8: test word_3AE2
0x06E9: jz 0x070d
0x06EC: push (word|byte)
0x06ED: op_2D
0x06EE: op_2D
0x06EF: op_2D
0x06F0: op_2D
0x06F1: op_2D
0x06F2: op_21
0x06F3: op_0D 0x0713
0x06F6: word_3ADF[0x0701] = word_3AE2
0x06F9: peek_and_pop
0x06FA: word_3AE2 &= 0x1f
0x06FC: op_21
0x06FD: .word
0x06FE: gamestate[0x5d] = 0
        gamestate[0x5E] = 0
0x0700: word_3AE2 = 0x000f
0x0703: op_4D
0x0704: inc word_3AE2
0x0705: op_2F 0x5d
0x0707: gamestate[0x5d] = word_3AE2
0x0709: loop 0x0700
0x070C: retf
0x070D: .word
0x070E: gamestate[0x5d] = 0
        gamestate[0x5E] = 0
0x0710: word_3AE2 = gamestate[0x5D]
0x0712: retf
0x0713: push_byte(running_script_idx)
0x0714: set loop = 0x08
0x0716: word_3AE2 = gamestate[0x0C]
0x0718: word_3ADF[0x641e] = word_3AE2
        word_3ADF[0x641F] = (word_3AE2 & 0xFF00) >> 8
0x071B: word_3AE4 = gamestate[0x1F]
0x071D: op_51 0x04ea
0x0720: gamestate[0x73] = word_3AE2
0x0722: gamestate[0x74] = word_3AE4
0x0724: gamestate[0x72] = 0xFF
        gamestate[0x73] = 0xFF
0x0726: ret
0x0727: word_3AE4 = gamestate[0x27]
0x0729: op_51 0x02dc
0x072C: gamestate[0x76] = word_3AE2
0x072E: gamestate[0x77] = word_3AE4
0x0730: op_0D 0x03a4
0x0733: gamestate[0x78] = word_3AE2
0x0735: gamestate[0x75] = 0xFF
        gamestate[0x76] = 0xFF
0x0737: ret
0x0738: word_3AE4 = gamestate[0x1F]
0x073A: dec [mem]
0x073B: word_3AE2 = 0x1500
0x073E: op_EA
0x073F: push_byte(running_script_idx)
0x0740: loop 0x073d
0x0743: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x0761
        }
        game_state[6] = al
0x0746: test game_state[0x27]
0x0748: jz 0x0760
0x074B: word_3AE4 = gamestate[0x27]
0x074D: dec [mem]
0x074E: op_0D 0x03a4
0x0751: call 0x06b5
0x0754: op_10 0x41, 0x01
0x0757: call 0x076c
0x075A: op_15 0x02dc
0x075D: loop 0x074e
0x0760: ret
0x0761: word_3AE2 = get_char_data 0x0e
0x0763: call 0x076c
0x0766: word_3AE4 = gamestate[0x06]
0x0768: op_15 0x04ea
0x076B: ret
0x076C: gamestate[0x43] = word_3AE2
0x076E: word_3AE2 = 0x0b
0x0770: op_4D
0x0771: inc word_3AE2
0x0772: inc word_3AE2
0x0773: op_2F 0x43
0x0775: jnc 0x077a
0x0778: word_3AE2 = 0xff
0x077A: ret
0x077B: test game_state[0x83]
0x077D: js 0x07c7
0x0780: op_19 0x83, 0x06
0x0783: word_3AE2 = get_char_data 0x4c
0x0785: word_3AE2 &= 0x81
0x0787: test word_3AE2
0x0788: jnz 0x07a6
0x078B: .word
0x078C: word_3AE2 = get_char_data 0x14
0x078E: op_31 0x5d
0x0790: jnc 0x07a9
0x0793: test word_3AE2
0x0794: jz 0x07a9
0x0797: set_char_prop 0x14
0x0799: word_3AE2 = get_char_data 0x18
0x079B: op_31 0x5f
0x079D: jnc 0x07b9
0x07A0: test word_3AE2
0x07A1: jz 0x07b9
0x07A4: set_char_prop 0x18
0x07A6: .byte
0x07A7: clc
0x07A8: retf
0x07A9: word_3AE2 = 0x00
0x07AB: .word
0x07AC: set_char_prop 0x18
0x07AE: set_char_prop 0x14
0x07B0: .byte
0x07B1: set loop = 0x01
0x07B3: word_3AE2 = 0x07
0x07B5: op_5F
0x07B6: clc
0x07B7: stc
0x07B8: retf
0x07B9: word_3AE2 = 0x00
0x07BB: .word
0x07BC: set_char_prop 0x18
0x07BE: .byte
0x07BF: set loop = 0x00
0x07C1: word_3AE2 = 0x00
0x07C3: op_5F
0x07C4: clc
0x07C5: stc
0x07C6: retf
0x07C7: word_3AE4 = gamestate[0x84]
0x07C9: op_0D 0x030e
0x07CC: op_3A 0x20
0x07CE: op_15 0x030e
0x07D1: shl byte [word_3AE4], 1
0x07D2: .word
0x07D3: op_0D 0x0278
0x07D6: op_31 0x5d
0x07D8: jnc 0x07e5
0x07DB: test word_3AE2
0x07DC: jz 0x07e5
0x07DF: op_15 0x0278
0x07E2: .byte
0x07E3: clc
0x07E4: retf
0x07E5: .byte
0x07E6: op_19 0x84, 0x4b
0x07E9: word_3AE2 = gamestate[0x83]
0x07EB: call 0x06b5
0x07EE: op_10 0x41, 0x0b
0x07F1: cmp word_3EA2, 0x0e
0x07F3: jz 0x080a
0x07F6: cmp word_3EA2, 0x09
0x07F8: jz 0x080a
0x07FB: cmp word_3EA2, 0x24
0x07FD: jz 0x080a
0x0800: cmp word_3EA2, 0x13
0x0802: jz 0x080a
0x0805: cmp word_3EA2, 0x38
0x0807: jnz 0x0819
0x080A: word_3AE2 = 0x28
0x080C: op_4D
0x080D: inc word_3AE2
0x080E: .word
0x080F: op_2F 0x6a
0x0811: gamestate[0x6a] = word_3AE2
0x0813: jnc 0x0818
0x0816: inc game_state[0x6C]
0x0818: .byte
0x0819: op_10 0x41, 0x0c
0x081C: op_2D
0x081D: op_2D
0x081E: op_2D
0x081F: word_3AE2 &= 0xfc
0x0821: op_21
0x0822: .word
0x0823: op_0D 0x084e
0x0826: gamestate[0x37] = word_3AE2
0x0828: op_0D 0x0850
0x082B: gamestate[0x39] = word_3AE2
0x082D: op_10 0x41, 0x0c
0x0830: word_3AE2 &= 0x001f
0x0833: inc word_3AE2
0x0834: op_33
0x0835: op_37
0x0836: word_3AE2 = gamestate[0x6E]
0x0838: op_2F 0x37
0x083A: gamestate[0x6e] = word_3AE2
0x083C: word_3AE2 = gamestate[0x70]
0x083E: jnc 0x0842
0x0841: inc word_3AE2
0x0842: op_2F 0x39
0x0844: gamestate[0x70] = word_3AE2
0x0846: .byte
0x0847: call 0x086e
0x084A: gamestate[0x75] = 0
0x084C: stc
0x084D: retf
0x084E: .byte
0x084F: .word
0x0850: .word
0x0851: .word
0x0852: word_3AE2 = gamestate[0x00]
0x0854: .word
0x0855: .word
0x0856: op_64
0x0857: .word
0x0858: .word
0x0859: .word
0x085A: op_E8
0x085B: data_res = resource_get(pop_byte())
0x085C: .word
0x085D: .word
0x085E: op_10 0x27, 0x00
0x0861: .word
0x0862: op_A0
0x0863: word_3AE2 = load_resource(word_3AE2)
0x0864: .byte
0x0865: .word
0x0866: cmp word_3AE4, 0x42
0x0868: var offset = gamestate[0x00]
        offset += gamestate[0x01] << 8
        offset += word_3AE4
        word_3AE2 = resource_idx(gamestate[0x02])->bytes[offset]
        word_3AE2 += resource_idx(gamestate[0x02])->bytes[offset + 1] << 8
0x086A: advance_cursor 0x96
0x086C: op_98 0x00
0x086E: op_10 0x41, 0x0a
0x0871: op_27
0x0872: op_18 0x41, 0x0a
0x0875: dec game_state[0x27]
0x0877: word_3AE2 = gamestate[0x27]
0x0879: cmp word_3AE2, gamestate[0x4B]
0x087B: jz 0x08b5
0x087E: word_3AE4 = gamestate[0x27]
0x0880: op_0D 0x02dc
0x0883: push (word|byte)
0x0884: op_0D 0x030e
0x0887: push (word|byte)
0x0888: op_0D 0x0340
0x088B: push (word|byte)
0x088C: op_0D 0x0372
0x088F: push (word|byte)
0x0890: op_0D 0x03a4
0x0893: push (word|byte)
0x0894: .word
0x0895: shl byte [word_3AE4], 1
0x0896: op_0D 0x0278
0x0899: word_3AE4 = gamestate[0x4B]
0x089B: shl byte [word_3AE4], 1
0x089C: op_15 0x0278
0x089F: .byte
0x08A0: op_2E
0x08A1: peek_and_pop
0x08A2: op_15 0x03a4
0x08A5: peek_and_pop
0x08A6: op_15 0x0372
0x08A9: peek_and_pop
0x08AA: op_15 0x0340
0x08AD: peek_and_pop
0x08AE: op_15 0x030e
0x08B1: peek_and_pop
0x08B2: op_15 0x02dc
0x08B5: ret
0x08B6: load_resource res: 0x03, offset: 0x08f4
0x08BA: test game_state[0x35]
0x08BC: jz 0x08f3
0x08BF: word_3AE4 = gamestate[0x27]
0x08C1: cmp word_3AE4, 0x00
0x08C3: jz 0x08f3
0x08C6: dec [mem]
0x08C7: push_byte(word_3AE4 & 0xFF)
0x08C8: op_0D 0x03a4
0x08CB: call 0x06b5
0x08CE: op_10 0x41, 0x01
0x08D1: op_2D
0x08D2: op_2D
0x08D3: gamestate[0x7a] = word_3AE2
0x08D5: op_2F 0x8d
0x08D7: gamestate[0x79] = word_3AE2
0x08D9: word_3AE2 = gamestate[0x7A]
0x08DB: op_2F 0x8f
0x08DD: gamestate[0x7a] = word_3AE2
0x08DF: pop byte
0x08E0: op_10 0x41, 0x27
0x08E3: op_2F 0x79
0x08E5: op_15 0x0340
0x08E8: op_10 0x41, 0x28
0x08EB: op_2F 0x7a
0x08ED: op_15 0x0372
0x08F0: loop 0x08c7
0x08F3: retf
0x08F4: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x08F8
        }
        game_state[6] = al
0x08F7: retf
0x08F8: word_3AE2 = get_char_data 0x0e
0x08FA: op_2D
0x08FB: op_2D
0x08FC: gamestate[0x79] = word_3AE2
0x08FE: gamestate[0x7a] = word_3AE2
0x0900: word_3AE4 = gamestate[0x06]
0x0902: op_0D 0x04ce
0x0905: op_21
0x0906: op_0D 0x0966
0x0909: op_2F 0x79
0x090B: op_2F 0x8c
0x090D: gamestate[0x79] = word_3AE2
0x090F: op_0D 0x0976
0x0912: op_2F 0x7a
0x0914: op_2F 0x8e
0x0916: gamestate[0x7a] = word_3AE2
0x0918: word_3AE2 = get_char_data 0x65
0x091A: op_2F 0x7a
0x091C: set_char_prop 0x5a
0x091E: word_3AE2 = gamestate[0xC0]
0x0920: op_2F 0xdd
0x0922: gamestate[0x7a] = word_3AE2
0x0924: op_63 0x0938
0x0927: word_3AE2 = get_char_data 0x64
0x0929: op_2F 0x79
0x092B: set_char_prop 0x59
0x092D: word_3AE2 = gamestate[0x7A]
0x092F: test word_3AE2
0x0930: jns 0x0935
0x0933: word_3AE2 = 0x00
0x0935: set_char_prop 0x5b
0x0937: ret
0x0938: op_68 0x00
0x093A: test word_3AE2
0x093B: jns 0x0964
0x093E: op_68 0x01
0x0940: test word_3AE2
0x0941: op_68 0x03
0x0943: op_2D
0x0944: op_2D
0x0945: op_2D
0x0946: op_2D
0x0947: jns 0x094d
0x094A: op_3C
0x094B: nop
0x094C: inc word_3AE2
0x094D: op_2F 0x79
0x094F: gamestate[0x79] = word_3AE2
0x0951: op_68 0x01
0x0953: word_3AE2 &= 0x40
0x0955: test word_3AE2
0x0956: op_68 0x03
0x0958: word_3AE2 &= 0x0f
0x095A: jz 0x0960
0x095D: op_3C
0x095E: nop
0x095F: inc word_3AE2
0x0960: op_2F 0x7a
0x0962: gamestate[0x7a] = word_3AE2
0x0964: clc
0x0965: ret
0x0966: .word
0x0967: op_FC
0x0968: op_FD
0x0969: .word
0x096A: .word
0x096B: .word
0x096C: .word
0x096D: .word
0x096E: .word
0x096F: .word
0x0970: .word
0x0971: .word
0x0972: .word
0x0973: .word
0x0974: .word
0x0975: .word
0x0976: .word
0x0977: .word
0x0978: nop
0x0979: .word
0x097A: nop
0x097B: .word
0x097C: data_res = resource_get(pop_byte())
0x097D: .word
0x097E: nop
0x097F: .byte
0x0980: op_FE
0x0981: .word
0x0982: op_FE
0x0983: op_FE
0x0984: .word
0x0985: .word
0x0986: .word
0x0987: word_3AE2 = gamestate[0x6E]
0x0989: op_39 0x70
0x098B: op_39 0x6a
0x098D: op_39 0x6c
0x098F: test word_3AE2
0x0990: jz 0x09e6
0x0993: gamestate[0x43] = 0
        gamestate[0x44] = 0
0x0995: draw_rectangle 0x0a, 0x30, 0x1e, 0x70
0x099A: set_msg $("Each member gets ")
0x09A7: set loop = 0x6e
0x09A9: call 0x09f4
0x09AC: jc 0x09c2
0x09AF: op_82 0x6e
0x09B1: set_msg $(" experience points ")
0x09C0: gamestate[0x43] = 0xFF
        gamestate[0x44] = 0xFF
0x09C2: set loop = 0x6a
0x09C4: call 0x09f4
0x09C7: jc 0x09dc
0x09CA: test game_state[0x43]
0x09CC: jz 0x09d4
0x09CF: set_msg $("and ")
0x09D4: op_82 0x6a
0x09D6: set_msg $(" gold ")
0x09DC: set_msg $("for combat.")
0x09E5: wait_escape
0x09E6: .byte
0x09E7: gamestate[0x43] = 0
0x09E9: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x0A1F
        }
        game_state[6] = al
0x09EC: test game_state[0x43]
0x09EE: jz 0x09f2
0x09F1: wait_escape
0x09F2: .byte
0x09F3: ret
0x09F4: op_0B 0x00
0x09F6: gamestate[0x37] = word_3AE2
0x09F8: op_0B 0x02
0x09FA: gamestate[0x39] = word_3AE2
0x09FC: op_39 0x37
0x09FE: test word_3AE2
0x09FF: jz 0x0a1d
0x0A02: word_3AE2 = gamestate[0x1F]
0x0A04: word_3AE2 &= 0xff
0x0A06: .word
0x0A07: op_35
0x0A08: op_37
0x0A09: word_3AE2 = gamestate[0x37]
0x0A0B: op_39 0x39
0x0A0D: test word_3AE2
0x0A0E: jnz 0x0a13
0x0A11: inc game_state[0x37]
0x0A13: word_3AE2 = gamestate[0x37]
0x0A15: gamestate[word_3AE4 + 0x00] = word_3AE2
0x0A17: word_3AE2 = gamestate[0x39]
0x0A19: gamestate[word_3AE4 + 0x02] = word_3AE2
0x0A1B: clc
0x0A1C: ret
0x0A1D: stc
0x0A1E: ret
0x0A1F: word_3AE2 = get_char_data 0x4c
0x0A21: word_3AE2 &= 0x9981
0x0A24: jnz 0x0aac
0x0A27: .word
0x0A28: op_19 0x6e, 0x37
0x0A2B: op_19 0x70, 0x39
0x0A2E: set loop = 0x51
0x0A30: call 0x0add
0x0A33: op_19 0x6a, 0x37
0x0A36: op_19 0x6c, 0x39
0x0A39: set loop = 0x55
0x0A3B: call 0x0add
0x0A3E: word_3AE2 = get_char_data 0x4f
0x0A40: cmp word_3EA2, 0x000c
0x0A43: jnc 0x0a49
0x0A46: word_3AE2 = 0x000b
0x0A49: op_27
0x0A4A: op_2A
0x0A4B: op_2A
0x0A4C: op_21
0x0A4D: op_0D 0x0aad
0x0A50: gamestate[0x45] = word_3AE2
0x0A52: op_0D 0x0aaf
0x0A55: gamestate[0x47] = word_3AE2
0x0A57: word_3AE2 = get_char_data 0x51
0x0A59: op_31 0x45
0x0A5B: gamestate[0x41] = word_3AE2
0x0A5D: word_3AE2 = get_char_data 0x53
0x0A5F: jc 0x0a69
0x0A62: op_27
0x0A63: cmp word_3EA2, 0xffff
0x0A66: jz 0x0aac
0x0A69: op_31 0x47
0x0A6B: jnc 0x0aac
0x0A6E: set_char_prop 0x53
0x0A70: word_3AE2 = gamestate[0x41]
0x0A72: set_char_prop 0x51
0x0A74: word_3AE2 = get_char_data 0x4f
0x0A76: inc word_3AE2
0x0A77: test word_3AE2
0x0A78: jnz 0x0a7c
0x0A7B: op_27
0x0A7C: set_char_prop 0x4f
0x0A7E: .byte
0x0A7F: word_3AE2 = get_char_data 0x3b
0x0A81: inc word_3AE2
0x0A82: inc word_3AE2
0x0A83: cmp word_3EA2, 0x02
0x0A85: jc 0x0a8a
0x0A88: word_3AE2 = 0xff
0x0A8A: set_char_prop 0x3b
0x0A8C: test game_state[0x43]
0x0A8E: jnz 0x0a98
0x0A91: gamestate[0x43] = 0xFF
0x0A93: draw_rectangle 0x00, 0x30, 0x28, 0x88
0x0A98: write_character_name
0x0A99: set_msg $(" has gained a level!\r")
0x0AA8: .word
0x0AA9: jmp 0x0a3e
0x0AAC: ret
0x0AAD: op_64
0x0AAE: .word
0x0AAF: .word
0x0AB0: .word
0x0AB1: op_2C
0x0AB2: .byte
0x0AB3: .word
0x0AB4: .word
0x0AB5: load_resource res: 0x02, offset: 0x0000
0x0AB9: op_E8
0x0ABA: data_res = resource_get(pop_byte())
0x0ABB: .word
0x0ABC: .word
0x0ABD: op_DC
0x0ABE: word_3AE4 = gamestate[0x00]
0x0AC0: .word
0x0AC1: op_34 0x08
0x0AC3: .word
0x0AC4: .word
0x0AC5: op_F0
0x0AC6: word_3AE2 = gamestate[0x00]
0x0AC8: .word
0x0AC9: op_10 0x0e, 0x00
0x0ACC: .word
0x0ACD: pop byte
0x0ACE: gamestate[0x00] = 0
        gamestate[0x01] = 0
0x0AD0: .word
0x0AD1: ui_header_random_encounter
0x0AD2: op_15 0x0000
0x0AD5: op_C8
0x0AD6: op_19 0x00, 0x00
0x0AD9: set_msg $("b.")
0x0ADC: .word
0x0ADD: load_char_data 0x00
0x0ADF: op_2F 0x37
0x0AE1: op_98 0x00
0x0AE3: load_char_data 0x02
0x0AE5: jnc 0x0aed
0x0AE8: inc word_3AE2
0x0AE9: test word_3AE2
0x0AEA: jz 0x0af2
0x0AED: op_2F 0x39
0x0AEF: jnc 0x0af7
0x0AF2: word_3AE2 = 0xffff
0x0AF5: op_98 0x00
0x0AF7: op_98 0x02
0x0AF9: ret
0x0AFA: gamestate[0x72] = 0
        gamestate[0x73] = 0
0x0AFC: word_3AE4 = gamestate[0x74]
0x0AFE: gamestate[0x06] = word_3AE4
0x0B00: gamestate[0x81] = word_3AE4
0x0B02: word_3AE2 = 0x1500
0x0B05: op_EA
0x0B06: push_byte(running_script_idx)
0x0B07: word_3AE2 = get_char_data 0x4c
0x0B09: word_3AE2 &= 0x9981
0x0B0C: jnz 0x0b20
0x0B0F: op_0D 0x04ce
0x0B12: test word_3AE2
0x0B13: js 0x0c0d
0x0B16: op_21
0x0B17: shl byte [word_3AE4], 1
0x0B18: .word
0x0B19: op_0D 0x0b21
0x0B1C: push (word|byte)
0x0B1D: .byte
0x0B1E: word_3AE4 = gamestate[0x06]
0x0B20: ret
0x0B21: call 0x530c
0x0B24: op_0C 0x0c53
0x0B27: call 0x8e0c
0x0B2A: op_0B 0x20
0x0B2C: op_0B 0x20
0x0B2E: op_0B 0x20
0x0B30: op_0B 0xdd
0x0B32: op_0B 0xed
0x0B34: op_0B 0x66
0x0B36: op_0B 0x20
0x0B38: op_0B 0x38
0x0B3A: op_0C 0x0b3d
0x0B3D: call 0x069f
0x0B40: set loop = 0x03
0x0B42: word_3AE2 = word_3AE4
0x0B43: call 0x06b5
0x0B46: op_10 0x41, 0x09
0x0B49: cmp word_3EA2, 0x02
0x0B4B: jnc 0x0b52
0x0B4E: op_27
0x0B4F: op_18 0x41, 0x09
0x0B52: loop 0x0b42
0x0B55: draw_and_set $("The party advances.")
0x0B64: op_92
0x0B65: ret
0x0B66: draw_pattern
0x0B67: write_character_name
0x0B68: set_msg $(" runs away!")
0x0B71: gamestate[0x41] = word_3AE4
0x0B73: word_3AE2 = 0x00
0x0B75: gamestate[word_3AE4 + 0x18] = word_3AE2
0x0B77: word_3AE4 = gamestate[0x41]
0x0B79: inc byte [word_3AE4]
0x0B7A: check_gamestate 0x1f
0x0B7C: jc 0x0b8a
0x0B7F: gamestate[0x43] = word_3AE4
0x0B81: load_resource res: 0x12, offset: 0x0051
0x0B85: inc game_state[0x41]
0x0B87: jmp 0x0b77
0x0B8A: dec game_state[0x1F]
0x0B8C: op_92
0x0B8D: ret
0x0B8E: draw_pattern
0x0B8F: write_character_name
0x0B90: op_0D 0x04d5
0x0B93: push (word|byte)
0x0B94: word_3AE2 &= 0x7f
0x0B96: gamestate[0x07] = word_3AE2
0x0B98: peek_and_pop
0x0B99: test word_3AE2
0x0B9A: jns 0x0bb2
0x0B9D: op_68 0x00
0x0B9F: word_3AE2 &= 0x7f
0x0BA1: op_69 0x00
0x0BA3: set_msg $(" deequips the ")
0x0BAF: jmp 0x0bd3
0x0BB2: load_resource res: 0x02, offset: 0x00a7
0x0BB6: op_68 0x05
0x0BB8: word_3AE2 &= 0x1f
0x0BBA: cmp word_3EA2, 0x0c
0x0BBC: jnz 0x0bc9
0x0BBF: set_msg $(" reloads")
0x0BC6: jmp 0x0bd4
0x0BC9: set_msg $(" equips the ")
0x0BD3: op_7E 0x09
0x0BD5: op_AE
0x0BD6: write_number
0x0BD7: load_resource res: 0x03, offset: 0x08f4
0x0BDB: op_92
0x0BDC: ret
0x0BDD: draw_pattern
0x0BDE: write_character_name
0x0BDF: set_msg $(" charges ahead!")
0x0BEA: jmp 0x0bfa
0x0BED: draw_pattern
0x0BEE: write_character_name
0x0BEF: set_msg $(" retreats back!")
0x0BFA: gamestate[0x41] = word_3AE4
0x0BFC: op_0D 0x04d5
0x0BFF: cmp word_3AE2, gamestate[0x1F]
0x0C01: jc 0x0c0b
0x0C04: gamestate[0x43] = word_3AE2
0x0C06: load_resource res: 0x12, offset: 0x0051
0x0C0A: op_91
0x0C0B: op_92
0x0C0C: ret
0x0C0D: word_3AE2 &= 0x7f
0x0C0F: gamestate[0x85] = word_3AE2
0x0C11: op_0D 0x04d5
0x0C14: gamestate[0x83] = word_3AE2
0x0C16: op_0D 0x04dc
0x0C19: gamestate[0x86] = word_3AE2
0x0C1B: op_0D 0x04e3
0x0C1E: gamestate[0x87] = word_3AE2
0x0C20: gamestate[0x89] = 0xFF
0x0C22: word_3AE2 = gamestate[0x83]
0x0C24: test word_3AE2
0x0C25: jns 0x0c2e
0x0C28: call 0x06b5
0x0C2B: jz 0x0c33
0x0C2E: load_resource res: 0x06, offset: 0x0000
0x0C32: op_92
0x0C33: gamestate[0x89] = 0
0x0C35: gamestate[0x88] = 0
0x0C37: ret
0x0C38: op_0D 0x04d5
0x0C3B: gamestate[0x83] = word_3AE2
0x0C3D: op_0D 0x04dc
0x0C40: gamestate[0x07] = word_3AE2
0x0C42: op_3A 0xc0
0x0C44: gamestate[0x88] = word_3AE2
0x0C46: op_68 0x07
0x0C48: gamestate[0x86] = word_3AE2
0x0C4A: gamestate[0x87] = 0
0x0C4C: op_68 0x06
0x0C4E: gamestate[0x85] = word_3AE2
0x0C50: jmp 0x0c22
0x0C53: op_0D 0x04d5
0x0C56: op_3A 0x80
0x0C58: gamestate[0x83] = word_3AE2
0x0C5A: op_0D 0x04dc
0x0C5D: gamestate[0x7f] = word_3AE2
0x0C5F: cmp word_3EA2, 0xff
0x0C61: word_3AE2 &= 0x1f
0x0C63: gamestate[0x07] = word_3AE2
0x0C65: jz 0x0cca
0x0C68: op_68 0x0a
0x0C6A: word_3AE2 &= 0x0f
0x0C6C: gamestate[0x80] = word_3AE2
0x0C6E: op_68 0x05
0x0C70: word_3AE2 &= 0x1f
0x0C72: gamestate[0x66] = word_3AE2
0x0C74: cmp word_3EA2, 0x08
0x0C76: jnc 0x0ccf
0x0C79: word_3AE2 = gamestate[0x66]
0x0C7B: cmp word_3EA2, 0x0b
0x0C7D: jz 0x0ca3
0x0C80: op_63 0x0ed3
0x0C83: jnc 0x0cca
0x0C86: op_68 0x0a
0x0C88: word_3AE2 &= 0x0f
0x0C8A: cmp word_3EA2, 0x08
0x0C8C: word_3AE2 &= 0x07
0x0C8E: jc 0x0c96
0x0C91: op_2F 0x80
0x0C93: jmp 0x0ca1
0x0C96: gamestate[0x43] = word_3AE2
0x0C98: word_3AE2 = gamestate[0x80]
0x0C9A: op_31 0x43
0x0C9C: jc 0x0ca1
0x0C9F: word_3AE2 = 0x01
0x0CA1: gamestate[0x80] = word_3AE2
0x0CA3: word_3AE2 = gamestate[0x7F]
0x0CA5: cmp word_3EA2, 0x80
0x0CA7: set loop = 0x01
0x0CA9: jnc 0x0cb5
0x0CAC: set loop = 0x03
0x0CAE: cmp word_3EA2, 0xc0
0x0CB0: jnc 0x0cb5
0x0CB3: set loop = 0x1e
0x0CB5: gamestate[0x7f] = word_3AE4
0x0CB7: op_68 0x00
0x0CB9: word_3AE2 &= 0x3f
0x0CBB: cmp word_3AE2, gamestate[0x7F]
0x0CBD: jc 0x0cd2
0x0CC0: test word_3AE2
0x0CC1: jnz 0x0cc5
0x0CC4: inc word_3AE2
0x0CC5: gamestate[0x7f] = word_3AE2
0x0CC7: jmp 0x0cd2
0x0CCA: gamestate[0x66] = 0xFF
0x0CCC: gamestate[0x80] = 0x01
0x0CCF: gamestate[0x7f] = 0x01
0x0CD2: test game_state[0x80]
0x0CD4: jnz 0x0cd9
0x0CD7: inc game_state[0x80]
0x0CD9: call 0x0f1c
0x0CDC: jnc 0x0cfb
0x0CDF: test word_3AE2
0x0CE0: jz 0x0cfa
0x0CE3: call 0x0ee6
0x0CE6: word_3AE2 = gamestate[0x83]
0x0CE8: load_resource res: 0x03, offset: 0x0200
0x0CEC: set_msg $(" is out of range.")
0x0CF9: op_92
0x0CFA: ret
0x0CFB: call 0x0ee6
0x0CFE: word_3AE2 = gamestate[0x66]
0x0D00: cmp word_3EA2, 0x08
0x0D02: jnc 0x0d13
0x0D05: jz 0x0d0d
0x0D08: cmp word_3EA2, 0x09
0x0D0A: jnz 0x0d0f
0x0D0D: op_90 0x04
0x0D0F: test word_3AE2
0x0D10: jns 0x0d1f
0x0D13: word_3AE4 = gamestate[0x84]
0x0D15: op_0D 0x030e
0x0D18: word_3AE2 &= 0x40
0x0D1A: cmp word_3EA2, 0x40
0x0D1C: jz 0x0e5e
0x0D1F: word_3AE2 = 0x27
0x0D21: word_3AE4 = gamestate[0x66]
0x0D23: cmp word_3AE4, 0x03
0x0D25: jnc 0x0d30
0x0D28: cmp word_3AE4, 0x0b
0x0D2A: jc 0x0d30
0x0D2D: op_0D 0x0ec7
0x0D30: op_21
0x0D31: load_char_data 0x00
0x0D33: gamestate[0x79] = word_3AE2
0x0D35: gamestate[0x7e] = 0
0x0D37: word_3AE4 = gamestate[0x7F]
0x0D39: jmp 0x0d47
0x0D3C: push_byte(word_3AE4 & 0xFF)
0x0D3D: load_resource res: 0x03, offset: 0x0f73
0x0D41: jc 0x0d46
0x0D44: inc game_state[0x7E]
0x0D46: pop byte
0x0D47: loop 0x0d3c
0x0D4A: test game_state[0x7E]
0x0D4C: jz 0x0e78
0x0D4F: test game_state[0x66]
0x0D51: jns 0x0d68
0x0D54: word_3AE2 = get_char_data 0x27
0x0D56: cmp word_3EA2, 0x08
0x0D58: jnc 0x0d5d
0x0D5B: word_3AE2 = 0x07
0x0D5D: op_21
0x0D5E: op_0D 0x0ec2
0x0D61: gamestate[0x7c] = word_3AE2
0x0D63: word_3AE2 = get_char_data 0x0c
0x0D65: jmp 0x0d7f
0x0D68: op_68 0x08
0x0D6A: gamestate[0x7c] = word_3AE2
0x0D6C: op_68 0x02
0x0D6E: word_3AE2 &= 0x1f
0x0D70: gamestate[0x5d] = word_3AE2
0x0D72: test word_3AE2
0x0D73: jz 0x0d81
0x0D76: op_68 0x01
0x0D78: word_3AE2 &= 0x3f
0x0D7A: op_21
0x0D7B: load_char_data 0x0c
0x0D7D: op_31 0x5d
0x0D7F: op_36
0x0D80: word_3AE4 = gamestate[0x14]
0x0D82: op_AE
0x0D83: op_0D 0x0605
0x0D86: op_0D 0x04ce
0x0D89: cmp word_3EA2, 0x01
0x0D8B: word_3AE2 = 0x00
0x0D8D: jnz 0x0d94
0x0D90: word_3AE2 = 0x04
0x0D92: op_4D
0x0D93: inc word_3AE2
0x0D94: word_3ADF[0x0da8] = word_3AE2
0x0D97: gamestate[0x61] = 0
0x0D99: gamestate[0x62] = 0
0x0D9B: word_3AE4 = gamestate[0x7E]
0x0D9D: dec [mem]
0x0D9E: push_byte(word_3AE4 & 0xFF)
0x0D9F: word_3AE2 = gamestate[0x7C]
0x0DA1: load_resource res: 0x03, offset: 0x06ec
0x0DA5: word_3AE2 = gamestate[0x5D]
0x0DA7: op_30 0x00
0x0DA9: .word
0x0DAA: jc 0x0db8
0x0DAD: op_30 0x0000
0x0DB0: jc 0x0db8
0x0DB3: op_2F 0x61
0x0DB5: jnc 0x0dbb
0x0DB8: word_3AE2 = 0xffff
0x0DBB: gamestate[0x61] = word_3AE2
0x0DBD: .byte
0x0DBE: pop byte
0x0DBF: loop 0x0d9e
0x0DC2: word_3AE4 = gamestate[0x06]
0x0DC4: op_0D 0x04ce
0x0DC7: cmp word_3EA2, 0x02
0x0DC9: .word
0x0DCA: word_3AE2 = gamestate[0x61]
0x0DCC: jnz 0x0dd2
0x0DCF: word_3AE2 = 0x0001
0x0DD2: gamestate[0x5d] = word_3AE2
0x0DD4: test word_3AE2
0x0DD5: .byte
0x0DD6: jz 0x0e4b
0x0DD9: set_msg $("hits ")
0x0DDE: word_3AE2 = gamestate[0x7E]
0x0DE0: op_81 word_3AE2
0x0DE1: op_27
0x0DE2: gamestate[0x09] = word_3AE2
0x0DE4: set_msg $(" time for ")
0x0DF0: .word
0x0DF1: word_3AE2 = gamestate[0x5D]
0x0DF3: op_81 word_3AE2
0x0DF4: .byte
0x0DF5: word_3AE2 = gamestate[0x5D]
0x0DF7: op_27
0x0DF8: op_39 0x5e
0x0DFA: gamestate[0x09] = word_3AE2
0x0DFC: set_msg $(" point of damage")
0x0E0B: word_3AE2 = gamestate[0x66]
0x0E0D: cmp word_3EA2, 0x03
0x0E0F: jnc 0x0e19
0x0E12: cmp word_3EA2, 0x07
0x0E14: jmp_XXX 0x0e19
0x0E17: op_90 0x06
0x0E19: load_resource res: 0x03, offset: 0x077b
0x0E1D: jnc 0x0e31
0x0E20: set_msg $(", killing ")
0x0E28: word_3AE2 = gamestate[0x83]
0x0E2A: load_resource res: 0x03, offset: 0x0205
0x0E2E: jmp 0x0e45
0x0E31: word_3AE4 = gamestate[0x06]
0x0E33: op_0D 0x04ce
0x0E36: cmp word_3EA2, 0x02
0x0E38: jnz 0x0e45
0x0E3B: word_3AE4 = gamestate[0x84]
0x0E3D: op_0D 0x030e
0x0E40: op_3A 0x04
0x0E42: op_15 0x030e
0x0E45: word_3AE2 = 0xae
0x0E47: write_number
0x0E48: jmp 0x0e7e
0x0E4B: set_msg $("fails to do any damage.")
0x0E5B: jmp 0x0e7e
0x0E5E: op_0D 0x030e
0x0E61: word_3AE2 &= 0xbf
0x0E63: op_15 0x030e
0x0E66: set_msg $("the attack is blocked!")
0x0E76: op_92
0x0E77: ret
0x0E78: set_msg $("misses.")
0x0E7E: test game_state[0x66]
0x0E80: js 0x0ec0
0x0E83: op_68 0x05
0x0E85: word_3AE2 &= 0x1f
0x0E87: cmp word_3EA2, 0x0c
0x0E89: jz 0x0e91
0x0E8C: cmp word_3EA2, 0x0b
0x0E8E: jnz 0x0ec0
0x0E91: op_68 0x00
0x0E93: word_3AE2 &= 0x3f
0x0E95: cmp word_3EA2, 0x3f
0x0E97: jz 0x0ec0
0x0E9A: op_31 0x7f
0x0E9C: jc 0x0ea1
0x0E9F: word_3AE2 = 0x00
0x0EA1: gamestate[0x45] = word_3AE2
0x0EA3: op_68 0x00
0x0EA5: word_3AE2 &= 0xc0
0x0EA7: op_39 0x45
0x0EA9: op_69 0x00
0x0EAB: test game_state[0x45]
0x0EAD: jnz 0x0ec0
0x0EB0: op_68 0x00
0x0EB2: word_3AE2 &= 0x7f
0x0EB4: op_69 0x00
0x0EB6: op_68 0x00
0x0EB8: word_3AE2 &= 0x40
0x0EBA: cmp word_3EA2, 0x40
0x0EBC: jnz 0x0ec0
0x0EBF: op_67
0x0EC0: op_92
0x0EC1: ret
0x0EC2: .word
0x0EC3: .byte
0x0EC4: op_21
0x0EC5: jnc 0x4222
0x0EC8: inc game_state[0x24]
0x0ECA: op_33
0x0ECB: op_34 0x36
0x0ECD: op_37
0x0ECE: op_35
0x0ECF: word_3AE2 &= 0x39
0x0ED1: op_39 0x3a
0x0ED3: op_68 0x00
0x0ED5: test word_3AE2
0x0ED6: jns 0x0ee4
0x0ED9: op_68 0x05
0x0EDB: word_3AE2 &= 0x1f
0x0EDD: cmp word_3EA2, 0x0c
0x0EDF: jnz 0x0ee4
0x0EE2: stc
0x0EE3: ret
0x0EE4: clc
0x0EE5: ret
0x0EE6: draw_pattern
0x0EE7: write_character_name
0x0EE8: gamestate[0x09] = 0xFF
0x0EEA: test game_state[0x66]
0x0EEC: js 0x0ef7
0x0EEF: op_68 0x05
0x0EF1: word_3AE2 &= 0x1f
0x0EF3: op_3C
0x0EF4: op_0C 0x0912
0x0EF7: set_msg $(" shoots ")
0x0F06: gamestate[0x09] = 0
0x0F08: word_3AE2 = gamestate[0x83]
0x0F0A: load_resource res: 0x03, offset: 0x025b
0x0F0E: .word
0x0F0F: word_3AE2 = gamestate[0x41]
0x0F11: op_30 0x0029
0x0F14: extract_string
0x0F15: .byte
0x0F16: set_msg $(" and ")
0x0F1B: ret
0x0F1C: word_3AE2 = gamestate[0x83]
0x0F1E: word_3AE2 &= 0x7f
0x0F20: gamestate[0x4d] = word_3AE2
0x0F22: call 0x06b5
0x0F25: jz 0x0f6b
0x0F28: op_10 0x41, 0x09
0x0F2B: cmp word_3AE2, gamestate[0x80]
0x0F2D: jmp_XXX 0x0f6f
0x0F30: word_3AE4 = gamestate[0x27]
0x0F32: dec [mem]
0x0F33: op_0D 0x03a4
0x0F36: cmp word_3AE2, gamestate[0x4D]
0x0F38: jnz 0x0f43
0x0F3B: op_0D 0x030e
0x0F3E: cmp word_3EA2, 0x80
0x0F40: jnc 0x0f5f
0x0F43: loop 0x0f33
0x0F46: word_3AE4 = gamestate[0x27]
0x0F48: dec [mem]
0x0F49: op_0D 0x03a4
0x0F4C: cmp word_3AE2, gamestate[0x4D]
0x0F4E: jnz 0x0f59
0x0F51: op_0D 0x030e
0x0F54: word_3AE2 &= 0x7f
0x0F56: op_15 0x030e
0x0F59: loop 0x0f49
0x0F5C: jmp 0x0f30
0x0F5F: op_0D 0x030e
0x0F62: op_3A 0x90
0x0F64: op_15 0x030e
0x0F67: gamestate[0x84] = word_3AE4
0x0F69: clc
0x0F6A: ret
0x0F6B: word_3AE2 = 0x00
0x0F6D: stc
0x0F6E: ret
0x0F6F: word_3AE2 = 0x01
0x0F71: stc
0x0F72: ret
0x0F73: word_3AE2 = 0x10
0x0F75: op_4D
0x0F76: op_30 0x03
0x0F78: cmp word_3EA2, 0x03
0x0F7A: jz 0x0fa8
0x0F7D: cmp word_3EA2, 0x12
0x0F7F: jc 0x0faa
0x0F82: gamestate[0x7b] = word_3AE2
0x0F84: word_3AE4 = gamestate[0x84]
0x0F86: op_0D 0x0372
0x0F89: gamestate[0x7a] = word_3AE2
0x0F8B: word_3AE2 = get_char_data 0x59
0x0F8D: op_30 0x80
0x0F8F: op_2F 0x79
0x0F91: jc 0x0f99
0x0F94: op_30 0x0d
0x0F96: jnc 0x0f9b
0x0F99: word_3AE2 = 0xff
0x0F9B: op_31 0x7a
0x0F9D: test word_3AE2
0x0F9E: jns 0x0faa
0x0FA1: op_32 0x80
0x0FA3: cmp word_3AE2, gamestate[0x7B]
0x0FA5: jnc 0x0faa
0x0FA8: clc
0x0FA9: retf
0x0FAA: stc
0x0FAB: retf
0x0FAC: gamestate[0x75] = 0
0x0FAE: word_3AE4 = gamestate[0x77]
0x0FB0: word_3AE2 = 0x00
0x0FB2: op_15 0x02dc
0x0FB5: op_0D 0x030e
0x0FB8: word_3AE2 &= 0xbf
0x0FBA: op_15 0x030e
0x0FBD: test game_state[0x1F]
0x0FBF: jz 0x1097
0x0FC2: word_3AE2 = gamestate[0x78]
0x0FC4: call 0x06b5
0x0FC7: gamestate[0x37] = 0
0x0FC9: gamestate[0x38] = 0
0x0FCB: var al = game_state[6]
        for (game_state[6] < game_state[0x1F]; game_state[6]++) {
          call 0x1098
        }
        game_state[6] = al
0x0FCE: word_3AE2 = gamestate[0x1F]
0x0FD0: .word
0x0FD1: gamestate[0x39] = 0
        gamestate[0x3A] = 0
0x0FD3: op_35
0x0FD4: op_37
0x0FD5: gamestate[0x47] = word_3AE2
0x0FD7: word_3AE2 = gamestate[0x41]
0x0FD9: op_30 0x0029
0x0FDC: gamestate[0x43] = word_3AE2
0x0FDE: word_3AE2 = gamestate[0x41]
0x0FE0: op_30 0x0010
0x0FE3: gamestate[0x68] = word_3AE2
0x0FE5: op_10 0x41, 0x1f
0x0FE8: word_3AE2 &= 0x00ff
0x0FEB: cmp word_3EA2, 0x0080
0x0FEE: jnc 0x0ff4
0x0FF1: op_3A 0x00
0x0FF3: nop
0x0FF4: gamestate[0x4f] = word_3AE2
0x0FF6: word_3AE2 = 0x0004
0x0FF9: op_4D
0x0FFA: op_2F 0x4f
0x0FFC: test word_3AE2
0x0FFD: js 0x1021
0x1000: op_31 0x47
0x1002: cmp word_3EA2, 0xfffc
0x1005: jc 0x101c
0x1008: test word_3AE2
0x1009: js 0x1021
0x100C: cmp word_3EA2, 0x0004
0x100F: jnc 0x1017
0x1012: set loop = 0x00
0x1014: jmp 0x1023
0x1017: set loop = 0x40
0x1019: jmp 0x1023
0x101C: set loop = 0x80
0x101E: jmp 0x1023
0x1021: set loop = 0xc0
0x1023: gamestate[0x4f] = word_3AE4
0x1025: .byte
0x1026: word_3AE4 = 0
0x1027: op_0E
0x1028: op_68 0x3e
0x102A: nop
0x102B: jz 0x1069
0x102E: word_3AE2 &= 0xc0
0x1030: cmp word_3AE2, gamestate[0x4F]
0x1032: jnz 0x1069
0x1035: op_0E
0x1036: op_68 0x38
0x1038: op_30 0x3e
0x103A: op_10 0x41, 0x78
0x103D: op_10 0x44, 0x56
0x1040: op_10 0x3e, 0x20
0x1043: jz 0x1061
0x1046: push_byte(word_3AE4 & 0xFF)
0x1047: word_3AE4 = gamestate[0x77]
0x1049: op_0D 0x030e
0x104C: word_3AE2 &= 0x10
0x104E: pop byte
0x104F: test word_3AE2
0x1050: jnz 0x1078
0x1053: jmp 0x1069
0x1056: push_byte(word_3AE4 & 0xFF)
0x1057: word_3AE4 = gamestate[0x77]
0x1059: op_0D 0x030e
0x105C: word_3AE2 &= 0x20
0x105E: jmp 0x104e
0x1061: op_10 0x41, 0x09
0x1064: cmp word_3EA2, 0x02
0x1066: jnc 0x1078
0x1069: inc byte [word_3AE4]
0x106A: inc byte [word_3AE4]
0x106B: if ++byte_3AE4 != 0x0F jmp 0x1027
0x106F: word_3AE2 = gamestate[0x4F]
0x1071: op_32 0x40
0x1073: gamestate[0x4f] = word_3AE2
0x1075: jmp 0x1026
0x1078: .word
0x1079: word_3AE2 = word_3AE4
0x107A: op_2F 0x68
0x107C: gamestate[0x68] = word_3AE2
0x107E: .byte
0x107F: word_3AE4 = gamestate[0x77]
0x1081: op_0D 0x030e
0x1084: word_3AE2 &= 0x02
0x1086: test word_3AE2
0x1087: jnz 0x10c6
0x108A: op_10 0x68, 0x00
0x108D: word_3AE2 &= 0x0f
0x108F: op_2A
0x1090: op_21
0x1091: .word
0x1092: op_0D 0x10a6
0x1095: push (word|byte)
0x1096: .byte
0x1097: ret
0x1098: .word
0x1099: word_3AE2 = get_char_data 0x4f
0x109B: op_2F 0x37
0x109D: jnc 0x10a3
0x10A0: word_3AE2 = 0xffff
0x10A3: gamestate[0x37] = word_3AE2
0x10A5: ret
0x10A6: op_B0
0x10A7: gamestate[0xb0] = 0
0x10A9: gamestate[0xb0] = 0
0x10AB: gamestate[0xb0] = 0
0x10AD: gamestate[0xb0] = 0
0x10AF: gamestate[0x0d] = 0
0x10B1: gamestate[0x25] = 0
0x10B3: gamestate[0xcb] = 0
0x10B5: op_10 0x83, 0x14
