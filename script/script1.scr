Disassembling script1.bin (208 bytes)
0x0000: word_3AE2 = 0xff
0x0002: load_resource res: 0x03, offset: 0x0000
0x0006: jnc 0x001f
0x0009: start_game
0x000A: set loop = 0x03
0x000C: call 0x0025
0x000F: call 0x0025
0x0012: word_3AE2 = gamestate[0x26]
0x0014: word_3AE2 &= 0xc0
0x0016: cmp word_3EA2, 0xc0
0x0018: jnz 0x0020
0x001B: loop 0x000f
0x001E: stc
0x001F: retf
0x0020: op_6C
0x0021: gamestate[0x40] = 0
0x0023: stc
0x0024: retf
0x0025: word_3AE2 = gamestate[0x03]
0x0027: inc word_3AE2
0x0028: word_3AE2 &= 0x03
0x002A: gamestate[0x03] = word_3AE2
0x002C: start_game
0x002D: ret
0x002E: op_6D

# Main game loop spans 0x2F - 0x85
# Starting a new game?
0x002F: start_game
0x0030: load_world
0x0031: op_48 0xda
0x0033: jnz 0x003a

# Check for dead.
0x0036: load_resource res: 0x16, offset: 0x0000

0x003A: op_48 0x3d
0x003C: jz 0x002f
0x003F: op_91
0x0040: word_3AE4 = gamestate[0x03]
0x0042: inc byte [word_3AE4]
0x0043: op_9D 0x05, 0x23
0x0046: jnz 0x004f
0x0049: test game_state[0xC2]
0x004B: jnz 0x004f
0x004E: word_3AE4 = 0
0x004F: gamestate[0xbe] = word_3AE4
0x0051: wait_event 0x4038, 'J', 0x0079, "LEFT", 0x0079, 'L', 0x007d, "RIGHT", 0x007d, 'K', 0x00b0, "ENTER",
  0x00b0, "UP", 0x00b0, "DOWN", 0x007b, 'I', 0x0088, "#[1-7]", 0x00c2, '?', 0x002e, "Unknown", 0x00c9, 0xff

# TURNING
# -----------------------------------------------
# game_state[0x03] will hold direction
#

# Turn left (we turn right 3 times)
0x0079: inc game_state[0x03]
# Turn down (we turn right 2 times)
0x007B: inc game_state[0x03]
# Turn right (once)
0x007D: inc game_state[0x03]
0x007F: word_3AE2 = gamestate[0x03]
0x0081: word_3AE2 &= 0x03
0x0083: gamestate[0x03] = word_3AE2
0x0085: jmp 0x002f


# Move forward
0x0088: word_3AE2 = gamestate[0x26]
0x008A: word_3AE2 &= 0xc0
0x008C: test word_3AE2
0x008D: jnz 0x00a8
0x0090: op_90 0x01
0x0092: op_6C
0x0093: gamestate[0x40] = 0
0x0095: start_game
0x0096: word_3AE2 = gamestate[0x24]
0x0098: test word_3AE2
0x0099: jz 0x0030
0x009C: op_4D
0x009D: test word_3AE2
0x009E: jnz 0x0030
0x00A1: load_resource res: 0x01, offset: 0x0000
0x00A5: jmp 0x002f
0x00A8: op_90 0x03
0x00AA: op_9B 0x01, 0x40
0x00AD: jmp 0x0030

# Enter/UP
0x00B0: word_3AE2 = gamestate[0x26]
0x00B2: word_3AE2 &= 0xc0
0x00B4: test word_3AE2
0x00B5: jz 0x0090
0x00B8: op_2A
0x00B9: test word_3AE2
0x00BA: js 0x00a8
0x00BD: op_90 0x02
0x00BF: jmp 0x0092

# Mini map
0x00C2: load_resource res: 0x0d, offset: 0x0000
0x00C6: jmp 0x0031

# Other keys?
0x00C9: load_resource res: 0x0f, offset: 0x0000
0x00CD: jmp 0x0031
